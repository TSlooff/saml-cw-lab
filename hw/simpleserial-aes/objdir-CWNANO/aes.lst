   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"aes.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 ".././crypto/tiny-AES128-C/aes.c"
  18              		.section	.text.KeyExpansion,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	KeyExpansion:
  25              	.LFB2:
   1:.././crypto/tiny-AES128-C/aes.c **** /* This AES-128 comes from https://github.com/kokke/tiny-AES128-C which is released into public dom
   2:.././crypto/tiny-AES128-C/aes.c **** 
   3:.././crypto/tiny-AES128-C/aes.c **** /*
   4:.././crypto/tiny-AES128-C/aes.c **** 
   5:.././crypto/tiny-AES128-C/aes.c **** This is an implementation of the AES128 algorithm, specifically ECB and CBC mode.
   6:.././crypto/tiny-AES128-C/aes.c **** 
   7:.././crypto/tiny-AES128-C/aes.c **** The implementation is verified against the test vectors in:
   8:.././crypto/tiny-AES128-C/aes.c ****   National Institute of Standards and Technology Special Publication 800-38A 2001 ED
   9:.././crypto/tiny-AES128-C/aes.c **** 
  10:.././crypto/tiny-AES128-C/aes.c **** ECB-AES128
  11:.././crypto/tiny-AES128-C/aes.c **** ----------
  12:.././crypto/tiny-AES128-C/aes.c **** 
  13:.././crypto/tiny-AES128-C/aes.c ****   plain-text:
  14:.././crypto/tiny-AES128-C/aes.c ****     6bc1bee22e409f96e93d7e117393172a
  15:.././crypto/tiny-AES128-C/aes.c ****     ae2d8a571e03ac9c9eb76fac45af8e51
  16:.././crypto/tiny-AES128-C/aes.c ****     30c81c46a35ce411e5fbc1191a0a52ef
  17:.././crypto/tiny-AES128-C/aes.c ****     f69f2445df4f9b17ad2b417be66c3710
  18:.././crypto/tiny-AES128-C/aes.c **** 
  19:.././crypto/tiny-AES128-C/aes.c ****   key:
  20:.././crypto/tiny-AES128-C/aes.c ****     2b7e151628aed2a6abf7158809cf4f3c
  21:.././crypto/tiny-AES128-C/aes.c **** 
  22:.././crypto/tiny-AES128-C/aes.c ****   resulting cipher
  23:.././crypto/tiny-AES128-C/aes.c ****     3ad77bb40d7a3660a89ecaf32466ef97 
  24:.././crypto/tiny-AES128-C/aes.c ****     f5d3d58503b9699de785895a96fdbaaf 
  25:.././crypto/tiny-AES128-C/aes.c ****     43b1cd7f598ece23881b00e3ed030688 
  26:.././crypto/tiny-AES128-C/aes.c ****     7b0c785e27e8ad3f8223207104725dd4 
  27:.././crypto/tiny-AES128-C/aes.c **** 
  28:.././crypto/tiny-AES128-C/aes.c **** 
  29:.././crypto/tiny-AES128-C/aes.c **** NOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)
  30:.././crypto/tiny-AES128-C/aes.c ****         You should pad the end of the string with zeros if this is not the case.
  31:.././crypto/tiny-AES128-C/aes.c **** 
  32:.././crypto/tiny-AES128-C/aes.c **** */
  33:.././crypto/tiny-AES128-C/aes.c **** 
  34:.././crypto/tiny-AES128-C/aes.c **** 
  35:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  36:.././crypto/tiny-AES128-C/aes.c **** /* Includes:                                                                 */
  37:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  38:.././crypto/tiny-AES128-C/aes.c **** #include <stdint.h>
  39:.././crypto/tiny-AES128-C/aes.c **** #include <string.h> // CBC mode, for memset
  40:.././crypto/tiny-AES128-C/aes.c **** #include "aes.h"
  41:.././crypto/tiny-AES128-C/aes.c **** 
  42:.././crypto/tiny-AES128-C/aes.c **** 
  43:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  44:.././crypto/tiny-AES128-C/aes.c **** /* Defines:                                                                  */
  45:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  46:.././crypto/tiny-AES128-C/aes.c **** // The number of columns comprising a state in AES. This is a constant in AES. Value=4
  47:.././crypto/tiny-AES128-C/aes.c **** #define Nb 4
  48:.././crypto/tiny-AES128-C/aes.c **** // The number of 32 bit words in a key.
  49:.././crypto/tiny-AES128-C/aes.c **** #define Nk 4
  50:.././crypto/tiny-AES128-C/aes.c **** // Key length in bytes [128 bit]
  51:.././crypto/tiny-AES128-C/aes.c **** #define KEYLEN 16
  52:.././crypto/tiny-AES128-C/aes.c **** // The number of rounds in AES Cipher.
  53:.././crypto/tiny-AES128-C/aes.c **** #define Nr 10
  54:.././crypto/tiny-AES128-C/aes.c **** 
  55:.././crypto/tiny-AES128-C/aes.c **** // jcallan@github points out that declaring Multiply as a function 
  56:.././crypto/tiny-AES128-C/aes.c **** // reduces code size considerably with the Keil ARM compiler.
  57:.././crypto/tiny-AES128-C/aes.c **** // See this link for more information: https://github.com/kokke/tiny-AES128-C/pull/3
  58:.././crypto/tiny-AES128-C/aes.c **** #ifndef MULTIPLY_AS_A_FUNCTION
  59:.././crypto/tiny-AES128-C/aes.c ****   #define MULTIPLY_AS_A_FUNCTION 0
  60:.././crypto/tiny-AES128-C/aes.c **** #endif
  61:.././crypto/tiny-AES128-C/aes.c **** 
  62:.././crypto/tiny-AES128-C/aes.c **** 
  63:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  64:.././crypto/tiny-AES128-C/aes.c **** /* Private variables:                                                        */
  65:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  66:.././crypto/tiny-AES128-C/aes.c **** // state - array holding the intermediate results during decryption.
  67:.././crypto/tiny-AES128-C/aes.c **** typedef uint8_t state_t[4][4];
  68:.././crypto/tiny-AES128-C/aes.c **** static state_t* state;
  69:.././crypto/tiny-AES128-C/aes.c **** 
  70:.././crypto/tiny-AES128-C/aes.c **** // The array that stores the round keys.
  71:.././crypto/tiny-AES128-C/aes.c **** static uint8_t RoundKey[176];
  72:.././crypto/tiny-AES128-C/aes.c **** 
  73:.././crypto/tiny-AES128-C/aes.c **** static uint8_t input_save[16];
  74:.././crypto/tiny-AES128-C/aes.c **** 
  75:.././crypto/tiny-AES128-C/aes.c **** // The Key input to the AES Program
  76:.././crypto/tiny-AES128-C/aes.c **** static uint8_t* Key;
  77:.././crypto/tiny-AES128-C/aes.c **** 
  78:.././crypto/tiny-AES128-C/aes.c **** // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
  79:.././crypto/tiny-AES128-C/aes.c **** // The numbers below can be computed dynamically trading ROM for RAM - 
  80:.././crypto/tiny-AES128-C/aes.c **** // This can be useful in (embedded) bootloader applications, where ROM is often limited.
  81:.././crypto/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t sbox[256] =   {
  82:.././crypto/tiny-AES128-C/aes.c ****   //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  83:.././crypto/tiny-AES128-C/aes.c ****   0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  84:.././crypto/tiny-AES128-C/aes.c ****   0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  85:.././crypto/tiny-AES128-C/aes.c ****   0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  86:.././crypto/tiny-AES128-C/aes.c ****   0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  87:.././crypto/tiny-AES128-C/aes.c ****   0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  88:.././crypto/tiny-AES128-C/aes.c ****   0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
  89:.././crypto/tiny-AES128-C/aes.c ****   0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  90:.././crypto/tiny-AES128-C/aes.c ****   0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  91:.././crypto/tiny-AES128-C/aes.c ****   0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  92:.././crypto/tiny-AES128-C/aes.c ****   0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  93:.././crypto/tiny-AES128-C/aes.c ****   0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  94:.././crypto/tiny-AES128-C/aes.c ****   0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
  95:.././crypto/tiny-AES128-C/aes.c ****   0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  96:.././crypto/tiny-AES128-C/aes.c ****   0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
  97:.././crypto/tiny-AES128-C/aes.c ****   0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
  98:.././crypto/tiny-AES128-C/aes.c ****   0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };
  99:.././crypto/tiny-AES128-C/aes.c **** 
 100:.././crypto/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t rsbox[256] =
 101:.././crypto/tiny-AES128-C/aes.c **** { 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
 102:.././crypto/tiny-AES128-C/aes.c ****   0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
 103:.././crypto/tiny-AES128-C/aes.c ****   0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
 104:.././crypto/tiny-AES128-C/aes.c ****   0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
 105:.././crypto/tiny-AES128-C/aes.c ****   0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
 106:.././crypto/tiny-AES128-C/aes.c ****   0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
 107:.././crypto/tiny-AES128-C/aes.c ****   0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
 108:.././crypto/tiny-AES128-C/aes.c ****   0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
 109:.././crypto/tiny-AES128-C/aes.c ****   0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
 110:.././crypto/tiny-AES128-C/aes.c ****   0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
 111:.././crypto/tiny-AES128-C/aes.c ****   0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
 112:.././crypto/tiny-AES128-C/aes.c ****   0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
 113:.././crypto/tiny-AES128-C/aes.c ****   0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
 114:.././crypto/tiny-AES128-C/aes.c ****   0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
 115:.././crypto/tiny-AES128-C/aes.c ****   0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
 116:.././crypto/tiny-AES128-C/aes.c ****   0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };
 117:.././crypto/tiny-AES128-C/aes.c **** 
 118:.././crypto/tiny-AES128-C/aes.c **** 
 119:.././crypto/tiny-AES128-C/aes.c **** // The round constant word array, Rcon[i], contains the values given by 
 120:.././crypto/tiny-AES128-C/aes.c **** // x to th e power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)
 121:.././crypto/tiny-AES128-C/aes.c **** // Note that i starts at 1, not 0).
 122:.././crypto/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t Rcon[11] = {
 123:.././crypto/tiny-AES128-C/aes.c ****   0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36
 124:.././crypto/tiny-AES128-C/aes.c **** };
 125:.././crypto/tiny-AES128-C/aes.c **** 
 126:.././crypto/tiny-AES128-C/aes.c **** 
 127:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 128:.././crypto/tiny-AES128-C/aes.c **** /* Private functions:                                                        */
 129:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 130:.././crypto/tiny-AES128-C/aes.c **** static uint8_t getSBoxValue(uint8_t num)
 131:.././crypto/tiny-AES128-C/aes.c **** {
 132:.././crypto/tiny-AES128-C/aes.c ****   return sbox[num];
 133:.././crypto/tiny-AES128-C/aes.c **** }
 134:.././crypto/tiny-AES128-C/aes.c **** 
 135:.././crypto/tiny-AES128-C/aes.c **** static uint8_t getSBoxInvert(uint8_t num)
 136:.././crypto/tiny-AES128-C/aes.c **** {
 137:.././crypto/tiny-AES128-C/aes.c ****   return rsbox[num];
 138:.././crypto/tiny-AES128-C/aes.c **** }
 139:.././crypto/tiny-AES128-C/aes.c **** 
 140:.././crypto/tiny-AES128-C/aes.c **** // This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the
 141:.././crypto/tiny-AES128-C/aes.c **** static void KeyExpansion(void)
 142:.././crypto/tiny-AES128-C/aes.c **** {
  26              		.loc 1 142 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
 143:.././crypto/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  30              		.loc 1 143 3 view .LVU1
 144:.././crypto/tiny-AES128-C/aes.c ****   uint8_t tempa[4]; // Used for the column/row operations
  31              		.loc 1 144 3 view .LVU2
 145:.././crypto/tiny-AES128-C/aes.c ****   
 146:.././crypto/tiny-AES128-C/aes.c ****   // The first round key is the key itself.
 147:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < Nk; ++i)
  32              		.loc 1 147 3 view .LVU3
  33              	.LVL0:
  34              		.loc 1 147 16 discriminator 1 view .LVU4
 148:.././crypto/tiny-AES128-C/aes.c ****   {
 149:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];
  35              		.loc 1 149 32 is_stmt 0 view .LVU5
  36 0000 214B     		ldr	r3, .L8
 142:.././crypto/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  37              		.loc 1 142 1 view .LVU6
  38 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 0, -32
  42              		.cfi_offset 1, -28
  43              		.cfi_offset 2, -24
  44              		.cfi_offset 4, -20
  45              		.cfi_offset 5, -16
  46              		.cfi_offset 6, -12
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0004 1B68     		ldr	r3, [r3]
  50 0006 214D     		ldr	r5, .L8+4
  51 0008 1900     		movs	r1, r3
  52              		.loc 1 149 32 view .LVU7
  53 000a 2A00     		movs	r2, r5
  54 000c 1031     		adds	r1, r1, #16
  55              	.LVL1:
  56              	.L2:
  57              		.loc 1 149 5 is_stmt 1 view .LVU8
  58              		.loc 1 149 32 is_stmt 0 view .LVU9
  59 000e 1878     		ldrb	r0, [r3]
  60              		.loc 1 149 27 view .LVU10
  61 0010 1070     		strb	r0, [r2]
 150:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
  62              		.loc 1 150 5 is_stmt 1 view .LVU11
  63              		.loc 1 150 32 is_stmt 0 view .LVU12
  64 0012 5878     		ldrb	r0, [r3, #1]
  65              		.loc 1 150 27 view .LVU13
  66 0014 5070     		strb	r0, [r2, #1]
 151:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
  67              		.loc 1 151 5 is_stmt 1 view .LVU14
  68              		.loc 1 151 32 is_stmt 0 view .LVU15
  69 0016 9878     		ldrb	r0, [r3, #2]
  70              		.loc 1 151 27 view .LVU16
  71 0018 9070     		strb	r0, [r2, #2]
 152:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
  72              		.loc 1 152 5 is_stmt 1 view .LVU17
  73              		.loc 1 152 32 is_stmt 0 view .LVU18
  74 001a D878     		ldrb	r0, [r3, #3]
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  75              		.loc 1 147 16 discriminator 1 view .LVU19
  76 001c 0433     		adds	r3, r3, #4
  77              		.loc 1 152 27 view .LVU20
  78 001e D070     		strb	r0, [r2, #3]
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  79              		.loc 1 147 22 is_stmt 1 discriminator 3 view .LVU21
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  80              		.loc 1 147 16 discriminator 1 view .LVU22
  81 0020 0432     		adds	r2, r2, #4
  82 0022 8B42     		cmp	r3, r1
  83 0024 F3D1     		bne	.L2
  84 0026 0426     		movs	r6, #4
  85              	.L3:
  86              	.LVL2:
 153:.././crypto/tiny-AES128-C/aes.c ****   }
 154:.././crypto/tiny-AES128-C/aes.c **** 
 155:.././crypto/tiny-AES128-C/aes.c ****   // All other round keys are found from the previous round keys.
 156:.././crypto/tiny-AES128-C/aes.c ****   for(; (i < (Nb * (Nr + 1))); ++i)
 157:.././crypto/tiny-AES128-C/aes.c ****   {
 158:.././crypto/tiny-AES128-C/aes.c ****     for(j = 0; j < 4; ++j)
  87              		.loc 1 158 18 discriminator 1 view .LVU23
 159:.././crypto/tiny-AES128-C/aes.c ****     {
 160:.././crypto/tiny-AES128-C/aes.c ****       tempa[j]=RoundKey[(i-1) * 4 + j];
  88              		.loc 1 160 15 is_stmt 0 view .LVU24
  89 0028 2900     		movs	r1, r5
  90 002a 01AC     		add	r4, sp, #4
  91 002c 0422     		movs	r2, #4
  92 002e 2000     		movs	r0, r4
  93 0030 0C31     		adds	r1, r1, #12
  94 0032 FFF7FEFF 		bl	memcpy
  95              	.LVL3:
 161:.././crypto/tiny-AES128-C/aes.c ****     }
 162:.././crypto/tiny-AES128-C/aes.c ****     if (i % Nk == 0)
  96              		.loc 1 162 5 is_stmt 1 view .LVU25
  97              		.loc 1 162 8 is_stmt 0 view .LVU26
  98 0036 0323     		movs	r3, #3
  99 0038 1E42     		tst	r6, r3
 100 003a 10D1     		bne	.L6
 101              	.LBB14:
 102              	.LBB15:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 103              		.loc 1 132 14 view .LVU27
 104 003c 144B     		ldr	r3, .L8+8
 105              	.LBE15:
 106              	.LBE14:
 163:.././crypto/tiny-AES128-C/aes.c ****     {
 164:.././crypto/tiny-AES128-C/aes.c ****       // This function rotates the 4 bytes in a word to the left once.
 165:.././crypto/tiny-AES128-C/aes.c ****       // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]
 166:.././crypto/tiny-AES128-C/aes.c **** 
 167:.././crypto/tiny-AES128-C/aes.c ****       // Function RotWord()
 168:.././crypto/tiny-AES128-C/aes.c ****       {
 169:.././crypto/tiny-AES128-C/aes.c ****         k = tempa[0];
 107              		.loc 1 169 18 view .LVU28
 108 003e 2178     		ldrb	r1, [r4]
 170:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
 171:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = tempa[2];
 172:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = tempa[3];
 109              		.loc 1 172 25 view .LVU29
 110 0040 E078     		ldrb	r0, [r4, #3]
 169:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
 111              		.loc 1 169 9 is_stmt 1 view .LVU30
 112              	.LVL4:
 170:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
 113              		.loc 1 170 9 view .LVU31
 171:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = tempa[3];
 114              		.loc 1 171 9 view .LVU32
 115              		.loc 1 172 9 view .LVU33
 173:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = k;
 116              		.loc 1 173 9 view .LVU34
 174:.././crypto/tiny-AES128-C/aes.c ****       }
 175:.././crypto/tiny-AES128-C/aes.c **** 
 176:.././crypto/tiny-AES128-C/aes.c ****       // SubWord() is a function that takes a four-byte input word and 
 177:.././crypto/tiny-AES128-C/aes.c ****       // applies the S-box to each of the four bytes to produce an output word.
 178:.././crypto/tiny-AES128-C/aes.c **** 
 179:.././crypto/tiny-AES128-C/aes.c ****       // Function Subword()
 180:.././crypto/tiny-AES128-C/aes.c ****       {
 181:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 117              		.loc 1 181 9 view .LVU35
 118              	.LBB18:
 119              	.LBI14:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 120              		.loc 1 130 16 view .LVU36
 121              	.LBB16:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 122              		.loc 1 132 3 view .LVU37
 132:.././crypto/tiny-AES128-C/aes.c **** }
 123              		.loc 1 132 14 is_stmt 0 view .LVU38
 124 0042 6278     		ldrb	r2, [r4, #1]
 125              	.LBE16:
 126              	.LBE18:
 127              	.LBB19:
 128              	.LBB20:
 129 0044 A778     		ldrb	r7, [r4, #2]
 130              	.LBE20:
 131              	.LBE19:
 132              	.LBB22:
 133              	.LBB17:
 134 0046 9A5C     		ldrb	r2, [r3, r2]
 135              	.LVL5:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 136              		.loc 1 132 14 view .LVU39
 137              	.LBE17:
 138              	.LBE22:
 182:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 139              		.loc 1 182 9 is_stmt 1 view .LVU40
 140              	.LBB23:
 141              	.LBI19:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 142              		.loc 1 130 16 view .LVU41
 143              	.LBB21:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 144              		.loc 1 132 3 view .LVU42
 132:.././crypto/tiny-AES128-C/aes.c **** }
 145              		.loc 1 132 3 is_stmt 0 view .LVU43
 146              	.LBE21:
 147              	.LBE23:
 148              		.loc 1 182 18 discriminator 1 view .LVU44
 149 0048 DF5D     		ldrb	r7, [r3, r7]
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 150              		.loc 1 183 18 discriminator 1 view .LVU45
 151 004a 185C     		ldrb	r0, [r3, r0]
 184:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 152              		.loc 1 184 18 discriminator 1 view .LVU46
 153 004c 5B5C     		ldrb	r3, [r3, r1]
 185:.././crypto/tiny-AES128-C/aes.c ****       }
 186:.././crypto/tiny-AES128-C/aes.c **** 
 187:.././crypto/tiny-AES128-C/aes.c ****       tempa[0] =  tempa[0] ^ Rcon[i/Nk];
 154              		.loc 1 187 36 view .LVU47
 155 004e B108     		lsrs	r1, r6, #2
 184:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 156              		.loc 1 184 18 discriminator 1 view .LVU48
 157 0050 E370     		strb	r3, [r4, #3]
 158              		.loc 1 187 34 view .LVU49
 159 0052 104B     		ldr	r3, .L8+12
 182:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 160              		.loc 1 182 18 discriminator 1 view .LVU50
 161 0054 6770     		strb	r7, [r4, #1]
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 162              		.loc 1 183 9 is_stmt 1 view .LVU51
 163              	.LVL6:
 164              	.LBB24:
 165              	.LBI24:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 166              		.loc 1 130 16 view .LVU52
 167              	.LBB25:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 168              		.loc 1 132 3 view .LVU53
 132:.././crypto/tiny-AES128-C/aes.c **** }
 169              		.loc 1 132 3 is_stmt 0 view .LVU54
 170              	.LBE25:
 171              	.LBE24:
 172              		.loc 1 187 16 view .LVU55
 173 0056 5B5C     		ldrb	r3, [r3, r1]
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 174              		.loc 1 183 18 discriminator 1 view .LVU56
 175 0058 A070     		strb	r0, [r4, #2]
 184:.././crypto/tiny-AES128-C/aes.c ****       }
 176              		.loc 1 184 9 is_stmt 1 view .LVU57
 177              	.LVL7:
 178              	.LBB26:
 179              	.LBI26:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 180              		.loc 1 130 16 view .LVU58
 181              	.LBB27:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 182              		.loc 1 132 3 view .LVU59
 132:.././crypto/tiny-AES128-C/aes.c **** }
 183              		.loc 1 132 3 is_stmt 0 view .LVU60
 184              	.LBE27:
 185              	.LBE26:
 186              		.loc 1 187 7 is_stmt 1 view .LVU61
 187              		.loc 1 187 16 is_stmt 0 view .LVU62
 188 005a 5340     		eors	r3, r2
 189 005c 2370     		strb	r3, [r4]
 190              	.LVL8:
 191              	.L6:
 188:.././crypto/tiny-AES128-C/aes.c ****     }
 189:.././crypto/tiny-AES128-C/aes.c ****     else if (Nk > 6 && i % Nk == 4)
 190:.././crypto/tiny-AES128-C/aes.c ****     {
 191:.././crypto/tiny-AES128-C/aes.c ****       // Function Subword()
 192:.././crypto/tiny-AES128-C/aes.c ****       {
 193:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 194:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 195:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 196:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 197:.././crypto/tiny-AES128-C/aes.c ****       }
 198:.././crypto/tiny-AES128-C/aes.c ****     }
 199:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 0] = RoundKey[(i - Nk) * 4 + 0] ^ tempa[0];
 192              		.loc 1 199 5 is_stmt 1 view .LVU63
 193              		.loc 1 199 25 is_stmt 0 view .LVU64
 194 005e 2B78     		ldrb	r3, [r5]
 195 0060 2278     		ldrb	r2, [r4]
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 196              		.loc 1 156 32 view .LVU65
 197 0062 0136     		adds	r6, r6, #1
 198              	.LVL9:
 199              		.loc 1 199 25 view .LVU66
 200 0064 5340     		eors	r3, r2
 201 0066 2B74     		strb	r3, [r5, #16]
 200:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 1] = RoundKey[(i - Nk) * 4 + 1] ^ tempa[1];
 202              		.loc 1 200 5 is_stmt 1 view .LVU67
 203              		.loc 1 200 25 is_stmt 0 view .LVU68
 204 0068 6278     		ldrb	r2, [r4, #1]
 205 006a 6B78     		ldrb	r3, [r5, #1]
 206 006c 5340     		eors	r3, r2
 207 006e 6B74     		strb	r3, [r5, #17]
 201:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 2] = RoundKey[(i - Nk) * 4 + 2] ^ tempa[2];
 208              		.loc 1 201 5 is_stmt 1 view .LVU69
 209              		.loc 1 201 25 is_stmt 0 view .LVU70
 210 0070 A278     		ldrb	r2, [r4, #2]
 211 0072 AB78     		ldrb	r3, [r5, #2]
 212 0074 5340     		eors	r3, r2
 213 0076 AB74     		strb	r3, [r5, #18]
 202:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 3] = RoundKey[(i - Nk) * 4 + 3] ^ tempa[3];
 214              		.loc 1 202 5 is_stmt 1 view .LVU71
 215              		.loc 1 202 25 is_stmt 0 view .LVU72
 216 0078 E278     		ldrb	r2, [r4, #3]
 217 007a EB78     		ldrb	r3, [r5, #3]
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 218              		.loc 1 156 12 discriminator 1 view .LVU73
 219 007c 0435     		adds	r5, r5, #4
 220              		.loc 1 202 25 view .LVU74
 221 007e 5340     		eors	r3, r2
 222 0080 EB73     		strb	r3, [r5, #15]
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 223              		.loc 1 156 32 is_stmt 1 view .LVU75
 224              	.LVL10:
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 225              		.loc 1 156 12 discriminator 1 view .LVU76
 226 0082 2C2E     		cmp	r6, #44
 227 0084 D0D1     		bne	.L3
 203:.././crypto/tiny-AES128-C/aes.c ****   }
 204:.././crypto/tiny-AES128-C/aes.c **** }
 228              		.loc 1 204 1 is_stmt 0 view .LVU77
 229              		@ sp needed
 230              	.LVL11:
 231              		.loc 1 204 1 view .LVU78
 232 0086 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 233              	.L9:
 234              		.align	2
 235              	.L8:
 236 0088 00000000 		.word	.LANCHOR0
 237 008c 18000000 		.word	RoundKey
 238 0090 00000000 		.word	sbox
 239 0094 00000000 		.word	.LANCHOR1
 240              		.cfi_endproc
 241              	.LFE2:
 243              		.section	.text.AddRoundKey,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 249              	AddRoundKey:
 250              	.LVL12:
 251              	.LFB3:
 205:.././crypto/tiny-AES128-C/aes.c **** 
 206:.././crypto/tiny-AES128-C/aes.c **** // This function adds the round key to state.
 207:.././crypto/tiny-AES128-C/aes.c **** // The round key is added to the state by an XOR function.
 208:.././crypto/tiny-AES128-C/aes.c **** static void AddRoundKey(uint8_t round)
 209:.././crypto/tiny-AES128-C/aes.c **** {
 252              		.loc 1 209 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 210:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 256              		.loc 1 210 3 view .LVU80
 211:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 257              		.loc 1 211 3 view .LVU81
 258              		.loc 1 211 12 discriminator 1 view .LVU82
 212:.././crypto/tiny-AES128-C/aes.c ****   {
 213:.././crypto/tiny-AES128-C/aes.c ****     for(j = 0; j < 4; ++j)
 214:.././crypto/tiny-AES128-C/aes.c ****     {
 215:.././crypto/tiny-AES128-C/aes.c ****       (*state)[i][j] ^= RoundKey[round * Nb * 4 + i * Nb + j];
 259              		.loc 1 215 8 is_stmt 0 view .LVU83
 260 0000 0C4B     		ldr	r3, .L15
 209:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 261              		.loc 1 209 1 view .LVU84
 262 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 263              	.LCFI1:
 264              		.cfi_def_cfa_offset 32
 265              		.cfi_offset 0, -32
 266              		.cfi_offset 1, -28
 267              		.cfi_offset 2, -24
 268              		.cfi_offset 4, -20
 269              		.cfi_offset 5, -16
 270              		.cfi_offset 6, -12
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0004 5B68     		ldr	r3, [r3, #4]
 274              		.loc 1 215 33 view .LVU85
 275 0006 0C4E     		ldr	r6, .L15+4
 276 0008 1F00     		movs	r7, r3
 277 000a 0001     		lsls	r0, r0, #4
 278              	.LVL13:
 279              		.loc 1 215 33 view .LVU86
 280 000c 1037     		adds	r7, r7, #16
 281              	.LVL14:
 282              	.L11:
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 283              		.loc 1 213 18 is_stmt 1 discriminator 1 view .LVU87
 209:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 284              		.loc 1 209 1 is_stmt 0 view .LVU88
 285 000e 1900     		movs	r1, r3
 286 0010 0022     		movs	r2, #0
 287              		.loc 1 215 33 view .LVU89
 288 0012 8419     		adds	r4, r0, r6
 289 0014 0194     		str	r4, [sp, #4]
 290              	.LVL15:
 291              	.L12:
 292              		.loc 1 215 7 is_stmt 1 view .LVU90
 293              		.loc 1 215 22 is_stmt 0 view .LVU91
 294 0016 019C     		ldr	r4, [sp, #4]
 295 0018 A45C     		ldrb	r4, [r4, r2]
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 296              		.loc 1 213 18 discriminator 1 view .LVU92
 297 001a 0132     		adds	r2, r2, #1
 298              	.LVL16:
 299              		.loc 1 215 22 view .LVU93
 300 001c 2500     		movs	r5, r4
 301 001e 0C78     		ldrb	r4, [r1]
 302 0020 6540     		eors	r5, r4
 303 0022 0D70     		strb	r5, [r1]
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 304              		.loc 1 213 23 is_stmt 1 discriminator 3 view .LVU94
 305              	.LVL17:
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 306              		.loc 1 213 18 discriminator 1 view .LVU95
 307 0024 0131     		adds	r1, r1, #1
 308 0026 042A     		cmp	r2, #4
 309 0028 F5D1     		bne	.L12
 211:.././crypto/tiny-AES128-C/aes.c ****   {
 310              		.loc 1 211 15 discriminator 2 view .LVU96
 311              	.LVL18:
 211:.././crypto/tiny-AES128-C/aes.c ****   {
 312              		.loc 1 211 12 discriminator 1 view .LVU97
 313 002a 0433     		adds	r3, r3, #4
 314              	.LVL19:
 211:.././crypto/tiny-AES128-C/aes.c ****   {
 315              		.loc 1 211 12 is_stmt 0 discriminator 1 view .LVU98
 316 002c 0430     		adds	r0, r0, #4
 317 002e BB42     		cmp	r3, r7
 318 0030 EDD1     		bne	.L11
 216:.././crypto/tiny-AES128-C/aes.c ****     }
 217:.././crypto/tiny-AES128-C/aes.c ****   }
 218:.././crypto/tiny-AES128-C/aes.c **** }
 319              		.loc 1 218 1 view .LVU99
 320              		@ sp needed
 321 0032 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 322              	.L16:
 323              		.align	2
 324              	.L15:
 325 0034 00000000 		.word	.LANCHOR0
 326 0038 18000000 		.word	RoundKey
 327              		.cfi_endproc
 328              	.LFE3:
 330              		.section	.text.SubBytes,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.code	16
 334              		.thumb_func
 336              	SubBytes:
 337              	.LFB4:
 219:.././crypto/tiny-AES128-C/aes.c **** 
 220:.././crypto/tiny-AES128-C/aes.c **** // The SubBytes Function Substitutes the values in the
 221:.././crypto/tiny-AES128-C/aes.c **** // state matrix with values in an S-box.
 222:.././crypto/tiny-AES128-C/aes.c **** static void SubBytes(void)
 223:.././crypto/tiny-AES128-C/aes.c **** {
 338              		.loc 1 223 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 224:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i, j;
 342              		.loc 1 224 3 view .LVU101
 225:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < 4; ++i)
 343              		.loc 1 225 3 view .LVU102
 344              	.LVL20:
 345              		.loc 1 225 16 discriminator 1 view .LVU103
 226:.././crypto/tiny-AES128-C/aes.c ****   {
 227:.././crypto/tiny-AES128-C/aes.c ****     for(j = 0; j < 4; ++j)
 228:.././crypto/tiny-AES128-C/aes.c ****     {
 229:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 230:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i+j] & 0x01) {
 231:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 1;
 232:.././crypto/tiny-AES128-C/aes.c ****         i+=1;
 233:.././crypto/tiny-AES128-C/aes.c ****       }
 234:.././crypto/tiny-AES128-C/aes.c ****       #endif
 235:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 236:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i+j] & 0x02) {
 237:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 1;
 238:.././crypto/tiny-AES128-C/aes.c ****         i+=1;
 239:.././crypto/tiny-AES128-C/aes.c ****       }
 240:.././crypto/tiny-AES128-C/aes.c ****       #endif
 241:.././crypto/tiny-AES128-C/aes.c ****       (*state)[j][i] = getSBoxValue((*state)[j][i]);
 346              		.loc 1 241 38 is_stmt 0 view .LVU104
 347 0000 084B     		ldr	r3, .L22
 223:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i, j;
 348              		.loc 1 223 1 view .LVU105
 349 0002 30B5     		push	{r4, r5, lr}
 350              	.LCFI2:
 351              		.cfi_def_cfa_offset 12
 352              		.cfi_offset 4, -12
 353              		.cfi_offset 5, -8
 354              		.cfi_offset 14, -4
 355 0004 5B68     		ldr	r3, [r3, #4]
 356              	.LBB28:
 357              	.LBB29:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 358              		.loc 1 132 14 view .LVU106
 359 0006 084C     		ldr	r4, .L22+4
 360 0008 181D     		adds	r0, r3, #4
 361              	.LVL21:
 362              	.L18:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 363              		.loc 1 132 14 view .LVU107
 364              	.LBE29:
 365              	.LBE28:
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 366              		.loc 1 227 18 is_stmt 1 discriminator 1 view .LVU108
 367 000a 1900     		movs	r1, r3
 223:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i, j;
 368              		.loc 1 223 1 is_stmt 0 view .LVU109
 369 000c 1A00     		movs	r2, r3
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 370              		.loc 1 227 18 discriminator 1 view .LVU110
 371 000e 1031     		adds	r1, r1, #16
 372              	.LVL22:
 373              	.L19:
 374              		.loc 1 241 7 is_stmt 1 view .LVU111
 375              	.LBB31:
 376              	.LBI28:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 377              		.loc 1 130 16 view .LVU112
 378              	.LBB30:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 379              		.loc 1 132 3 view .LVU113
 132:.././crypto/tiny-AES128-C/aes.c **** }
 380              		.loc 1 132 14 is_stmt 0 view .LVU114
 381 0010 1578     		ldrb	r5, [r2]
 382 0012 655D     		ldrb	r5, [r4, r5]
 383              	.LVL23:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 384              		.loc 1 132 14 view .LVU115
 385              	.LBE30:
 386              	.LBE31:
 387              		.loc 1 241 22 discriminator 1 view .LVU116
 388 0014 1570     		strb	r5, [r2]
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 389              		.loc 1 227 23 is_stmt 1 discriminator 3 view .LVU117
 390              	.LVL24:
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 391              		.loc 1 227 18 discriminator 1 view .LVU118
 392 0016 0432     		adds	r2, r2, #4
 393              	.LVL25:
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 394              		.loc 1 227 18 is_stmt 0 discriminator 1 view .LVU119
 395 0018 8A42     		cmp	r2, r1
 396 001a F9D1     		bne	.L19
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 397              		.loc 1 225 21 is_stmt 1 discriminator 2 view .LVU120
 398              	.LVL26:
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 399              		.loc 1 225 16 discriminator 1 view .LVU121
 400 001c 0133     		adds	r3, r3, #1
 401              	.LVL27:
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 402              		.loc 1 225 16 is_stmt 0 discriminator 1 view .LVU122
 403 001e 8342     		cmp	r3, r0
 404 0020 F3D1     		bne	.L18
 242:.././crypto/tiny-AES128-C/aes.c ****     }
 243:.././crypto/tiny-AES128-C/aes.c ****   }
 244:.././crypto/tiny-AES128-C/aes.c **** }
 405              		.loc 1 244 1 view .LVU123
 406              		@ sp needed
 407 0022 30BD     		pop	{r4, r5, pc}
 408              	.L23:
 409              		.align	2
 410              	.L22:
 411 0024 00000000 		.word	.LANCHOR0
 412 0028 00000000 		.word	sbox
 413              		.cfi_endproc
 414              	.LFE4:
 416              		.section	.text.ShiftRows,"ax",%progbits
 417              		.align	1
 418              		.syntax unified
 419              		.code	16
 420              		.thumb_func
 422              	ShiftRows:
 423              	.LFB5:
 245:.././crypto/tiny-AES128-C/aes.c **** 
 246:.././crypto/tiny-AES128-C/aes.c **** // The ShiftRows() function shifts the rows in the state to the left.
 247:.././crypto/tiny-AES128-C/aes.c **** // Each row is shifted with different offset.
 248:.././crypto/tiny-AES128-C/aes.c **** // Offset = Row number. So the first row is not shifted.
 249:.././crypto/tiny-AES128-C/aes.c **** static void ShiftRows(void)
 250:.././crypto/tiny-AES128-C/aes.c **** {
 424              		.loc 1 250 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 251:.././crypto/tiny-AES128-C/aes.c ****   uint8_t temp;
 429              		.loc 1 251 3 view .LVU125
 252:.././crypto/tiny-AES128-C/aes.c **** 
 253:.././crypto/tiny-AES128-C/aes.c ****   // Rotate first row 1 columns to left  
 254:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 255:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[1] & 0x01) {
 256:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 257:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 258:.././crypto/tiny-AES128-C/aes.c ****       }
 259:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[2] & 0x02) {
 260:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 261:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 262:.././crypto/tiny-AES128-C/aes.c ****       }
 263:.././crypto/tiny-AES128-C/aes.c ****       #endif
 264:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 265:.././crypto/tiny-AES128-C/aes.c ****   #endif
 266:.././crypto/tiny-AES128-C/aes.c ****   temp           = (*state)[0][1];
 430              		.loc 1 266 3 view .LVU126
 431              		.loc 1 266 21 is_stmt 0 view .LVU127
 432 0000 0D4B     		ldr	r3, .L25
 267:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 268:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][1] = (*state)[2][1];
 269:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][1] = (*state)[3][1];
 270:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 271:.././crypto/tiny-AES128-C/aes.c **** 
 272:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 273:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 274:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4] & 0x01) {
 275:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 276:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 277:.././crypto/tiny-AES128-C/aes.c ****       }
 278:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[10] & 0x02) {
 279:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 280:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 281:.././crypto/tiny-AES128-C/aes.c ****       }
 282:.././crypto/tiny-AES128-C/aes.c ****       #endif
 283:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 284:.././crypto/tiny-AES128-C/aes.c ****   #endif
 285:.././crypto/tiny-AES128-C/aes.c ****   temp           = (*state)[0][2];
 286:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 287:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 288:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 289:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 290:.././crypto/tiny-AES128-C/aes.c ****   #endif
 291:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 292:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[5] & 0x01) {
 293:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 294:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 295:.././crypto/tiny-AES128-C/aes.c ****       }
 296:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[8] & 0x02) {
 297:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 298:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 299:.././crypto/tiny-AES128-C/aes.c ****       }
 300:.././crypto/tiny-AES128-C/aes.c ****       #endif
 301:.././crypto/tiny-AES128-C/aes.c **** 
 302:.././crypto/tiny-AES128-C/aes.c ****   temp       = (*state)[1][2];
 303:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 304:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 305:.././crypto/tiny-AES128-C/aes.c **** 
 306:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 307:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 308:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[0] & 0x01) {
 309:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 310:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 311:.././crypto/tiny-AES128-C/aes.c ****       }
 312:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[3] & 0x02) {
 313:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 314:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 315:.././crypto/tiny-AES128-C/aes.c ****       }
 316:.././crypto/tiny-AES128-C/aes.c ****       #endif
 317:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 318:.././crypto/tiny-AES128-C/aes.c ****   #endif
 319:.././crypto/tiny-AES128-C/aes.c ****   // Rotate third row 3 columns to left
 320:.././crypto/tiny-AES128-C/aes.c ****   temp       = (*state)[0][3];
 321:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 322:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 323:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3] = (*state)[1][3];
 324:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 325:.././crypto/tiny-AES128-C/aes.c **** }
 433              		.loc 1 325 1 view .LVU128
 434              		@ sp needed
 266:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 435              		.loc 1 266 21 view .LVU129
 436 0002 5B68     		ldr	r3, [r3, #4]
 267:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 437              		.loc 1 267 18 view .LVU130
 438 0004 5979     		ldrb	r1, [r3, #5]
 266:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 439              		.loc 1 266 18 view .LVU131
 440 0006 5A78     		ldrb	r2, [r3, #1]
 441              	.LVL28:
 267:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 442              		.loc 1 267 3 is_stmt 1 view .LVU132
 267:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 443              		.loc 1 267 18 is_stmt 0 view .LVU133
 444 0008 5970     		strb	r1, [r3, #1]
 268:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][1] = (*state)[3][1];
 445              		.loc 1 268 3 is_stmt 1 view .LVU134
 268:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][1] = (*state)[3][1];
 446              		.loc 1 268 18 is_stmt 0 view .LVU135
 447 000a 597A     		ldrb	r1, [r3, #9]
 448 000c 5971     		strb	r1, [r3, #5]
 269:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 449              		.loc 1 269 3 is_stmt 1 view .LVU136
 269:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 450              		.loc 1 269 18 is_stmt 0 view .LVU137
 451 000e 597B     		ldrb	r1, [r3, #13]
 270:.././crypto/tiny-AES128-C/aes.c **** 
 452              		.loc 1 270 18 view .LVU138
 453 0010 5A73     		strb	r2, [r3, #13]
 269:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 454              		.loc 1 269 18 view .LVU139
 455 0012 5972     		strb	r1, [r3, #9]
 270:.././crypto/tiny-AES128-C/aes.c **** 
 456              		.loc 1 270 3 is_stmt 1 view .LVU140
 285:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 457              		.loc 1 285 3 view .LVU141
 286:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 458              		.loc 1 286 18 is_stmt 0 view .LVU142
 459 0014 997A     		ldrb	r1, [r3, #10]
 285:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 460              		.loc 1 285 18 view .LVU143
 461 0016 9A78     		ldrb	r2, [r3, #2]
 462              	.LVL29:
 286:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 463              		.loc 1 286 3 is_stmt 1 view .LVU144
 286:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 464              		.loc 1 286 18 is_stmt 0 view .LVU145
 465 0018 9970     		strb	r1, [r3, #2]
 287:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 466              		.loc 1 287 3 is_stmt 1 view .LVU146
 303:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 467              		.loc 1 303 18 is_stmt 0 view .LVU147
 468 001a 997B     		ldrb	r1, [r3, #14]
 287:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 469              		.loc 1 287 18 view .LVU148
 470 001c 9A72     		strb	r2, [r3, #10]
 302:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 471              		.loc 1 302 3 is_stmt 1 view .LVU149
 302:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 472              		.loc 1 302 14 is_stmt 0 view .LVU150
 473 001e 9A79     		ldrb	r2, [r3, #6]
 474              	.LVL30:
 303:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 475              		.loc 1 303 3 is_stmt 1 view .LVU151
 303:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 476              		.loc 1 303 18 is_stmt 0 view .LVU152
 477 0020 9971     		strb	r1, [r3, #6]
 304:.././crypto/tiny-AES128-C/aes.c **** 
 478              		.loc 1 304 3 is_stmt 1 view .LVU153
 321:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 479              		.loc 1 321 18 is_stmt 0 view .LVU154
 480 0022 D97B     		ldrb	r1, [r3, #15]
 304:.././crypto/tiny-AES128-C/aes.c **** 
 481              		.loc 1 304 18 view .LVU155
 482 0024 9A73     		strb	r2, [r3, #14]
 320:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 483              		.loc 1 320 3 is_stmt 1 view .LVU156
 320:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 484              		.loc 1 320 14 is_stmt 0 view .LVU157
 485 0026 DA78     		ldrb	r2, [r3, #3]
 486              	.LVL31:
 321:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 487              		.loc 1 321 3 is_stmt 1 view .LVU158
 321:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 488              		.loc 1 321 18 is_stmt 0 view .LVU159
 489 0028 D970     		strb	r1, [r3, #3]
 322:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3] = (*state)[1][3];
 490              		.loc 1 322 3 is_stmt 1 view .LVU160
 322:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3] = (*state)[1][3];
 491              		.loc 1 322 18 is_stmt 0 view .LVU161
 492 002a D97A     		ldrb	r1, [r3, #11]
 493 002c D973     		strb	r1, [r3, #15]
 323:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 494              		.loc 1 323 3 is_stmt 1 view .LVU162
 323:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 495              		.loc 1 323 18 is_stmt 0 view .LVU163
 496 002e D979     		ldrb	r1, [r3, #7]
 324:.././crypto/tiny-AES128-C/aes.c **** }
 497              		.loc 1 324 18 view .LVU164
 498 0030 DA71     		strb	r2, [r3, #7]
 323:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 499              		.loc 1 323 18 view .LVU165
 500 0032 D972     		strb	r1, [r3, #11]
 324:.././crypto/tiny-AES128-C/aes.c **** }
 501              		.loc 1 324 3 is_stmt 1 view .LVU166
 502              		.loc 1 325 1 is_stmt 0 view .LVU167
 503 0034 7047     		bx	lr
 504              	.L26:
 505 0036 C046     		.align	2
 506              	.L25:
 507 0038 00000000 		.word	.LANCHOR0
 508              		.cfi_endproc
 509              	.LFE5:
 511              		.section	.text.xtime,"ax",%progbits
 512              		.align	1
 513              		.syntax unified
 514              		.code	16
 515              		.thumb_func
 517              	xtime:
 518              	.LVL32:
 519              	.LFB6:
 326:.././crypto/tiny-AES128-C/aes.c **** 
 327:.././crypto/tiny-AES128-C/aes.c **** static uint8_t xtime(uint8_t x)
 328:.././crypto/tiny-AES128-C/aes.c **** {
 520              		.loc 1 328 1 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 329:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 525              		.loc 1 329 3 view .LVU169
 328:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 526              		.loc 1 328 1 is_stmt 0 view .LVU170
 527 0000 0200     		movs	r2, r0
 330:.././crypto/tiny-AES128-C/aes.c **** }
 528              		.loc 1 330 1 view .LVU171
 529              		@ sp needed
 329:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 530              		.loc 1 329 18 view .LVU172
 531 0002 1B23     		movs	r3, #27
 532 0004 C009     		lsrs	r0, r0, #7
 533              	.LVL33:
 329:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 534              		.loc 1 329 18 view .LVU173
 535 0006 4042     		rsbs	r0, r0, #0
 536 0008 1840     		ands	r0, r3
 537 000a 5200     		lsls	r2, r2, #1
 538              	.LVL34:
 329:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 539              		.loc 1 329 18 view .LVU174
 540 000c 5040     		eors	r0, r2
 329:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 541              		.loc 1 329 18 discriminator 1 view .LVU175
 542 000e C0B2     		uxtb	r0, r0
 543              		.loc 1 330 1 view .LVU176
 544 0010 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE6:
 548              		.section	.text.InvSubBytes,"ax",%progbits
 549              		.align	1
 550              		.syntax unified
 551              		.code	16
 552              		.thumb_func
 554              	InvSubBytes:
 555              	.LFB9:
 331:.././crypto/tiny-AES128-C/aes.c **** 
 332:.././crypto/tiny-AES128-C/aes.c **** // MixColumns function mixes the columns of the state matrix
 333:.././crypto/tiny-AES128-C/aes.c **** static void MixColumns(void)
 334:.././crypto/tiny-AES128-C/aes.c **** {
 335:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i;
 336:.././crypto/tiny-AES128-C/aes.c ****   uint8_t Tmp,Tm,t;
 337:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < 4; ++i)
 338:.././crypto/tiny-AES128-C/aes.c ****   {  
 339:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 340:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i] & 0x01) {
 341:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 342:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 343:.././crypto/tiny-AES128-C/aes.c ****       }
 344:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i] & 0x02) {
 345:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 346:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 347:.././crypto/tiny-AES128-C/aes.c ****       }
 348:.././crypto/tiny-AES128-C/aes.c ****       #endif
 349:.././crypto/tiny-AES128-C/aes.c ****     t   = (*state)[i][0];
 350:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 354:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 355:.././crypto/tiny-AES128-C/aes.c ****   }
 356:.././crypto/tiny-AES128-C/aes.c **** }
 357:.././crypto/tiny-AES128-C/aes.c **** 
 358:.././crypto/tiny-AES128-C/aes.c **** // Multiply is used to multiply numbers in the field GF(2^8)
 359:.././crypto/tiny-AES128-C/aes.c **** #if MULTIPLY_AS_A_FUNCTION
 360:.././crypto/tiny-AES128-C/aes.c **** static uint8_t Multiply(uint8_t x, uint8_t y)
 361:.././crypto/tiny-AES128-C/aes.c **** {
 362:.././crypto/tiny-AES128-C/aes.c ****   return (((y & 1) * x) ^
 363:.././crypto/tiny-AES128-C/aes.c ****        ((y>>1 & 1) * xtime(x)) ^
 364:.././crypto/tiny-AES128-C/aes.c ****        ((y>>2 & 1) * xtime(xtime(x))) ^
 365:.././crypto/tiny-AES128-C/aes.c ****        ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^
 366:.././crypto/tiny-AES128-C/aes.c ****        ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))));
 367:.././crypto/tiny-AES128-C/aes.c ****   }
 368:.././crypto/tiny-AES128-C/aes.c **** #else
 369:.././crypto/tiny-AES128-C/aes.c **** #define Multiply(x, y)                                \
 370:.././crypto/tiny-AES128-C/aes.c ****       (  ((y & 1) * x) ^                              \
 371:.././crypto/tiny-AES128-C/aes.c ****       ((y>>1 & 1) * xtime(x)) ^                       \
 372:.././crypto/tiny-AES128-C/aes.c ****       ((y>>2 & 1) * xtime(xtime(x))) ^                \
 373:.././crypto/tiny-AES128-C/aes.c ****       ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^         \
 374:.././crypto/tiny-AES128-C/aes.c ****       ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))   \
 375:.././crypto/tiny-AES128-C/aes.c **** 
 376:.././crypto/tiny-AES128-C/aes.c **** #endif
 377:.././crypto/tiny-AES128-C/aes.c **** 
 378:.././crypto/tiny-AES128-C/aes.c **** // MixColumns function mixes the columns of the state matrix.
 379:.././crypto/tiny-AES128-C/aes.c **** // The method used to multiply may be difficult to understand for the inexperienced.
 380:.././crypto/tiny-AES128-C/aes.c **** // Please use the references to gain more information.
 381:.././crypto/tiny-AES128-C/aes.c **** static void InvMixColumns(void)
 382:.././crypto/tiny-AES128-C/aes.c **** {
 383:.././crypto/tiny-AES128-C/aes.c ****   int i;
 384:.././crypto/tiny-AES128-C/aes.c ****   uint8_t a,b,c,d;
 385:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 386:.././crypto/tiny-AES128-C/aes.c ****   { 
 387:.././crypto/tiny-AES128-C/aes.c ****     a = (*state)[i][0];
 388:.././crypto/tiny-AES128-C/aes.c ****     b = (*state)[i][1];
 389:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 390:.././crypto/tiny-AES128-C/aes.c ****     d = (*state)[i][3];
 391:.././crypto/tiny-AES128-C/aes.c **** 
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][0] = Multiply(a, 0x0e) ^ Multiply(b, 0x0b) ^ Multiply(c, 0x0d) ^ Multiply(d, 0x09);
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 395:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 396:.././crypto/tiny-AES128-C/aes.c ****   }
 397:.././crypto/tiny-AES128-C/aes.c **** }
 398:.././crypto/tiny-AES128-C/aes.c **** 
 399:.././crypto/tiny-AES128-C/aes.c **** 
 400:.././crypto/tiny-AES128-C/aes.c **** // The SubBytes Function Substitutes the values in the
 401:.././crypto/tiny-AES128-C/aes.c **** // state matrix with values in an S-box.
 402:.././crypto/tiny-AES128-C/aes.c **** static void InvSubBytes(void)
 403:.././crypto/tiny-AES128-C/aes.c **** {
 556              		.loc 1 403 1 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 404:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 560              		.loc 1 404 3 view .LVU178
 405:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 561              		.loc 1 405 3 view .LVU179
 562              	.LVL35:
 563              		.loc 1 405 12 discriminator 1 view .LVU180
 406:.././crypto/tiny-AES128-C/aes.c ****   {
 407:.././crypto/tiny-AES128-C/aes.c ****     for(j=0;j<4;++j)
 408:.././crypto/tiny-AES128-C/aes.c ****     {
 409:.././crypto/tiny-AES128-C/aes.c ****       (*state)[j][i] = getSBoxInvert((*state)[j][i]);
 564              		.loc 1 409 39 is_stmt 0 view .LVU181
 565 0000 084B     		ldr	r3, .L33
 403:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 566              		.loc 1 403 1 view .LVU182
 567 0002 30B5     		push	{r4, r5, lr}
 568              	.LCFI3:
 569              		.cfi_def_cfa_offset 12
 570              		.cfi_offset 4, -12
 571              		.cfi_offset 5, -8
 572              		.cfi_offset 14, -4
 573 0004 5B68     		ldr	r3, [r3, #4]
 574              	.LBB32:
 575              	.LBB33:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 576              		.loc 1 137 15 view .LVU183
 577 0006 084C     		ldr	r4, .L33+4
 578 0008 181D     		adds	r0, r3, #4
 579              	.LVL36:
 580              	.L29:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 581              		.loc 1 137 15 view .LVU184
 582              	.LBE33:
 583              	.LBE32:
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 584              		.loc 1 407 14 is_stmt 1 discriminator 1 view .LVU185
 585 000a 1900     		movs	r1, r3
 403:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 586              		.loc 1 403 1 is_stmt 0 view .LVU186
 587 000c 1A00     		movs	r2, r3
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 588              		.loc 1 407 14 discriminator 1 view .LVU187
 589 000e 1031     		adds	r1, r1, #16
 590              	.LVL37:
 591              	.L30:
 592              		.loc 1 409 7 is_stmt 1 view .LVU188
 593              	.LBB35:
 594              	.LBI32:
 135:.././crypto/tiny-AES128-C/aes.c **** {
 595              		.loc 1 135 16 view .LVU189
 596              	.LBB34:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 597              		.loc 1 137 3 view .LVU190
 137:.././crypto/tiny-AES128-C/aes.c **** }
 598              		.loc 1 137 15 is_stmt 0 view .LVU191
 599 0010 1578     		ldrb	r5, [r2]
 600 0012 655D     		ldrb	r5, [r4, r5]
 601              	.LVL38:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 602              		.loc 1 137 15 view .LVU192
 603              	.LBE34:
 604              	.LBE35:
 605              		.loc 1 409 22 discriminator 1 view .LVU193
 606 0014 1570     		strb	r5, [r2]
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 607              		.loc 1 407 17 is_stmt 1 discriminator 3 view .LVU194
 608              	.LVL39:
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 609              		.loc 1 407 14 discriminator 1 view .LVU195
 610 0016 0432     		adds	r2, r2, #4
 611              	.LVL40:
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 612              		.loc 1 407 14 is_stmt 0 discriminator 1 view .LVU196
 613 0018 8A42     		cmp	r2, r1
 614 001a F9D1     		bne	.L30
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 615              		.loc 1 405 15 is_stmt 1 discriminator 2 view .LVU197
 616              	.LVL41:
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 617              		.loc 1 405 12 discriminator 1 view .LVU198
 618 001c 0133     		adds	r3, r3, #1
 619              	.LVL42:
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 620              		.loc 1 405 12 is_stmt 0 discriminator 1 view .LVU199
 621 001e 8342     		cmp	r3, r0
 622 0020 F3D1     		bne	.L29
 410:.././crypto/tiny-AES128-C/aes.c ****     }
 411:.././crypto/tiny-AES128-C/aes.c ****   }
 412:.././crypto/tiny-AES128-C/aes.c **** }
 623              		.loc 1 412 1 view .LVU200
 624              		@ sp needed
 625 0022 30BD     		pop	{r4, r5, pc}
 626              	.L34:
 627              		.align	2
 628              	.L33:
 629 0024 00000000 		.word	.LANCHOR0
 630 0028 00000000 		.word	rsbox
 631              		.cfi_endproc
 632              	.LFE9:
 634              		.section	.text.InvShiftRows,"ax",%progbits
 635              		.align	1
 636              		.syntax unified
 637              		.code	16
 638              		.thumb_func
 640              	InvShiftRows:
 641              	.LFB10:
 413:.././crypto/tiny-AES128-C/aes.c **** 
 414:.././crypto/tiny-AES128-C/aes.c **** static void InvShiftRows(void)
 415:.././crypto/tiny-AES128-C/aes.c **** {
 642              		.loc 1 415 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 416:.././crypto/tiny-AES128-C/aes.c ****   uint8_t temp;
 647              		.loc 1 416 3 view .LVU202
 417:.././crypto/tiny-AES128-C/aes.c **** 
 418:.././crypto/tiny-AES128-C/aes.c ****   // Rotate first row 1 columns to right  
 419:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[3][1];
 648              		.loc 1 419 3 view .LVU203
 649              		.loc 1 419 9 is_stmt 0 view .LVU204
 650 0000 0D4B     		ldr	r3, .L36
 420:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 421:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][1]=(*state)[1][1];
 422:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][1]=(*state)[0][1];
 423:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1]=temp;
 424:.././crypto/tiny-AES128-C/aes.c **** 
 425:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to right 
 426:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[0][2];
 427:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2]=(*state)[2][2];
 428:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2]=temp;
 429:.././crypto/tiny-AES128-C/aes.c **** 
 430:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[1][2];
 431:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2]=(*state)[3][2];
 432:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2]=temp;
 433:.././crypto/tiny-AES128-C/aes.c **** 
 434:.././crypto/tiny-AES128-C/aes.c ****   // Rotate third row 3 columns to right
 435:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[0][3];
 436:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3]=(*state)[1][3];
 437:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3]=(*state)[2][3];
 438:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3]=(*state)[3][3];
 439:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3]=temp;
 440:.././crypto/tiny-AES128-C/aes.c **** }
 651              		.loc 1 440 1 view .LVU205
 652              		@ sp needed
 419:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 653              		.loc 1 419 9 view .LVU206
 654 0002 5B68     		ldr	r3, [r3, #4]
 420:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 655              		.loc 1 420 17 view .LVU207
 656 0004 597A     		ldrb	r1, [r3, #9]
 419:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 657              		.loc 1 419 7 view .LVU208
 658 0006 5A7B     		ldrb	r2, [r3, #13]
 659              	.LVL43:
 420:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 660              		.loc 1 420 3 is_stmt 1 view .LVU209
 420:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 661              		.loc 1 420 17 is_stmt 0 view .LVU210
 662 0008 5973     		strb	r1, [r3, #13]
 421:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][1]=(*state)[0][1];
 663              		.loc 1 421 3 is_stmt 1 view .LVU211
 421:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][1]=(*state)[0][1];
 664              		.loc 1 421 17 is_stmt 0 view .LVU212
 665 000a 5979     		ldrb	r1, [r3, #5]
 666 000c 5972     		strb	r1, [r3, #9]
 422:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1]=temp;
 667              		.loc 1 422 3 is_stmt 1 view .LVU213
 422:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1]=temp;
 668              		.loc 1 422 17 is_stmt 0 view .LVU214
 669 000e 5978     		ldrb	r1, [r3, #1]
 423:.././crypto/tiny-AES128-C/aes.c **** 
 670              		.loc 1 423 17 view .LVU215
 671 0010 5A70     		strb	r2, [r3, #1]
 422:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1]=temp;
 672              		.loc 1 422 17 view .LVU216
 673 0012 5971     		strb	r1, [r3, #5]
 423:.././crypto/tiny-AES128-C/aes.c **** 
 674              		.loc 1 423 3 is_stmt 1 view .LVU217
 426:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2]=(*state)[2][2];
 675              		.loc 1 426 3 view .LVU218
 427:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2]=temp;
 676              		.loc 1 427 17 is_stmt 0 view .LVU219
 677 0014 997A     		ldrb	r1, [r3, #10]
 426:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2]=(*state)[2][2];
 678              		.loc 1 426 7 view .LVU220
 679 0016 9A78     		ldrb	r2, [r3, #2]
 680              	.LVL44:
 427:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2]=temp;
 681              		.loc 1 427 3 is_stmt 1 view .LVU221
 427:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2]=temp;
 682              		.loc 1 427 17 is_stmt 0 view .LVU222
 683 0018 9970     		strb	r1, [r3, #2]
 428:.././crypto/tiny-AES128-C/aes.c **** 
 684              		.loc 1 428 3 is_stmt 1 view .LVU223
 431:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2]=temp;
 685              		.loc 1 431 17 is_stmt 0 view .LVU224
 686 001a 997B     		ldrb	r1, [r3, #14]
 428:.././crypto/tiny-AES128-C/aes.c **** 
 687              		.loc 1 428 17 view .LVU225
 688 001c 9A72     		strb	r2, [r3, #10]
 430:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2]=(*state)[3][2];
 689              		.loc 1 430 3 is_stmt 1 view .LVU226
 430:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2]=(*state)[3][2];
 690              		.loc 1 430 7 is_stmt 0 view .LVU227
 691 001e 9A79     		ldrb	r2, [r3, #6]
 692              	.LVL45:
 431:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2]=temp;
 693              		.loc 1 431 3 is_stmt 1 view .LVU228
 431:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2]=temp;
 694              		.loc 1 431 17 is_stmt 0 view .LVU229
 695 0020 9971     		strb	r1, [r3, #6]
 432:.././crypto/tiny-AES128-C/aes.c **** 
 696              		.loc 1 432 3 is_stmt 1 view .LVU230
 436:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3]=(*state)[2][3];
 697              		.loc 1 436 17 is_stmt 0 view .LVU231
 698 0022 D979     		ldrb	r1, [r3, #7]
 432:.././crypto/tiny-AES128-C/aes.c **** 
 699              		.loc 1 432 17 view .LVU232
 700 0024 9A73     		strb	r2, [r3, #14]
 435:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3]=(*state)[1][3];
 701              		.loc 1 435 3 is_stmt 1 view .LVU233
 435:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3]=(*state)[1][3];
 702              		.loc 1 435 7 is_stmt 0 view .LVU234
 703 0026 DA78     		ldrb	r2, [r3, #3]
 704              	.LVL46:
 436:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3]=(*state)[2][3];
 705              		.loc 1 436 3 is_stmt 1 view .LVU235
 436:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3]=(*state)[2][3];
 706              		.loc 1 436 17 is_stmt 0 view .LVU236
 707 0028 D970     		strb	r1, [r3, #3]
 437:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3]=(*state)[3][3];
 708              		.loc 1 437 3 is_stmt 1 view .LVU237
 437:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3]=(*state)[3][3];
 709              		.loc 1 437 17 is_stmt 0 view .LVU238
 710 002a D97A     		ldrb	r1, [r3, #11]
 711 002c D971     		strb	r1, [r3, #7]
 438:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3]=temp;
 712              		.loc 1 438 3 is_stmt 1 view .LVU239
 438:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3]=temp;
 713              		.loc 1 438 17 is_stmt 0 view .LVU240
 714 002e D97B     		ldrb	r1, [r3, #15]
 439:.././crypto/tiny-AES128-C/aes.c **** }
 715              		.loc 1 439 17 view .LVU241
 716 0030 DA73     		strb	r2, [r3, #15]
 438:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3]=temp;
 717              		.loc 1 438 17 view .LVU242
 718 0032 D972     		strb	r1, [r3, #11]
 439:.././crypto/tiny-AES128-C/aes.c **** }
 719              		.loc 1 439 3 is_stmt 1 view .LVU243
 720              		.loc 1 440 1 is_stmt 0 view .LVU244
 721 0034 7047     		bx	lr
 722              	.L37:
 723 0036 C046     		.align	2
 724              	.L36:
 725 0038 00000000 		.word	.LANCHOR0
 726              		.cfi_endproc
 727              	.LFE10:
 729              		.section	.text.Cipher,"ax",%progbits
 730              		.align	1
 731              		.syntax unified
 732              		.code	16
 733              		.thumb_func
 735              	Cipher:
 736              	.LFB11:
 441:.././crypto/tiny-AES128-C/aes.c **** 
 442:.././crypto/tiny-AES128-C/aes.c **** 
 443:.././crypto/tiny-AES128-C/aes.c **** // Cipher is the main function that encrypts the PlainText.
 444:.././crypto/tiny-AES128-C/aes.c **** static void Cipher(void)
 445:.././crypto/tiny-AES128-C/aes.c **** {
 737              		.loc 1 445 1 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 24
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 446:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 741              		.loc 1 446 3 view .LVU246
 742              	.LVL47:
 447:.././crypto/tiny-AES128-C/aes.c **** 
 448:.././crypto/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 449:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(0); 
 743              		.loc 1 449 3 view .LVU247
 445:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 744              		.loc 1 445 1 is_stmt 0 view .LVU248
 745 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 746              	.LCFI4:
 747              		.cfi_def_cfa_offset 20
 748              		.cfi_offset 4, -20
 749              		.cfi_offset 5, -16
 750              		.cfi_offset 6, -12
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753              		.loc 1 449 3 view .LVU249
 754 0002 0020     		movs	r0, #0
 445:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 755              		.loc 1 445 1 view .LVU250
 756 0004 87B0     		sub	sp, sp, #28
 757              	.LCFI5:
 758              		.cfi_def_cfa_offset 48
 759              		.loc 1 449 3 view .LVU251
 760 0006 FFF7FEFF 		bl	AddRoundKey
 761              	.LVL48:
 450:.././crypto/tiny-AES128-C/aes.c ****   
 451:.././crypto/tiny-AES128-C/aes.c ****   // There will be Nr rounds.
 452:.././crypto/tiny-AES128-C/aes.c ****   // The first Nr-1 rounds are identical.
 453:.././crypto/tiny-AES128-C/aes.c ****   // These Nr-1 rounds are executed in the loop below.
 454:.././crypto/tiny-AES128-C/aes.c ****   for(round = 1; round < Nr; ++round)
 762              		.loc 1 454 3 is_stmt 1 view .LVU252
 763              		.loc 1 454 24 discriminator 1 view .LVU253
 764              		.loc 1 454 13 is_stmt 0 view .LVU254
 765 000a 0125     		movs	r5, #1
 766              	.LVL49:
 767              	.L40:
 455:.././crypto/tiny-AES128-C/aes.c ****   {
 456:.././crypto/tiny-AES128-C/aes.c ****     SubBytes();
 768              		.loc 1 456 5 is_stmt 1 view .LVU255
 769 000c FFF7FEFF 		bl	SubBytes
 770              	.LVL50:
 457:.././crypto/tiny-AES128-C/aes.c ****     ShiftRows();
 771              		.loc 1 457 5 view .LVU256
 772 0010 FFF7FEFF 		bl	ShiftRows
 773              	.LVL51:
 458:.././crypto/tiny-AES128-C/aes.c ****     MixColumns();
 774              		.loc 1 458 5 view .LVU257
 775              	.LBB38:
 776              	.LBI38:
 333:.././crypto/tiny-AES128-C/aes.c **** {
 777              		.loc 1 333 13 view .LVU258
 778              	.LBB39:
 335:.././crypto/tiny-AES128-C/aes.c ****   uint8_t Tmp,Tm,t;
 779              		.loc 1 335 3 view .LVU259
 336:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < 4; ++i)
 780              		.loc 1 336 3 view .LVU260
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 781              		.loc 1 337 3 view .LVU261
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 782              		.loc 1 337 16 discriminator 1 view .LVU262
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 783              		.loc 1 349 12 is_stmt 0 view .LVU263
 784 0014 224B     		ldr	r3, .L43
 785 0016 5C68     		ldr	r4, [r3, #4]
 786 0018 2300     		movs	r3, r4
 787 001a 1033     		adds	r3, r3, #16
 788 001c 0593     		str	r3, [sp, #20]
 789              	.LVL52:
 790              	.L39:
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 791              		.loc 1 349 5 is_stmt 1 view .LVU264
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 792              		.loc 1 349 9 is_stmt 0 view .LVU265
 793 001e 2378     		ldrb	r3, [r4]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 794              		.loc 1 350 39 view .LVU266
 795 0020 6678     		ldrb	r6, [r4, #1]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 796              		.loc 1 350 9 view .LVU267
 797 0022 1800     		movs	r0, r3
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 798              		.loc 1 349 9 view .LVU268
 799 0024 0193     		str	r3, [sp, #4]
 800              	.LVL53:
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 801              		.loc 1 350 5 is_stmt 1 view .LVU269
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 802              		.loc 1 350 56 is_stmt 0 view .LVU270
 803 0026 A378     		ldrb	r3, [r4, #2]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 804              		.loc 1 350 9 view .LVU271
 805 0028 7040     		eors	r0, r6
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 806              		.loc 1 350 56 view .LVU272
 807 002a 0293     		str	r3, [sp, #8]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 808              		.loc 1 350 73 view .LVU273
 809 002c E378     		ldrb	r3, [r4, #3]
 810 002e 0393     		str	r3, [sp, #12]
 811 0030 039A     		ldr	r2, [sp, #12]
 812 0032 029B     		ldr	r3, [sp, #8]
 813 0034 5340     		eors	r3, r2
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 814              		.loc 1 350 9 view .LVU274
 815 0036 1F00     		movs	r7, r3
 816 0038 0493     		str	r3, [sp, #16]
 817 003a 4740     		eors	r7, r0
 818              	.LVL54:
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 819              		.loc 1 351 5 is_stmt 1 view .LVU275
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 820              		.loc 1 351 45 view .LVU276
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 821              		.loc 1 351 50 is_stmt 0 view .LVU277
 822 003c FFF7FEFF 		bl	xtime
 823              	.LVL55:
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 824              		.loc 1 351 62 is_stmt 1 discriminator 1 view .LVU278
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 825              		.loc 1 351 77 is_stmt 0 discriminator 1 view .LVU279
 826 0040 019B     		ldr	r3, [sp, #4]
 827 0042 5840     		eors	r0, r3
 828              	.LVL56:
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 829              		.loc 1 351 77 discriminator 1 view .LVU280
 830 0044 7840     		eors	r0, r7
 831 0046 2070     		strb	r0, [r4]
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 832              		.loc 1 352 5 is_stmt 1 view .LVU281
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 833              		.loc 1 352 9 is_stmt 0 view .LVU282
 834 0048 0298     		ldr	r0, [sp, #8]
 835 004a 7040     		eors	r0, r6
 836              	.LVL57:
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 837              		.loc 1 352 45 is_stmt 1 view .LVU283
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 838              		.loc 1 352 50 is_stmt 0 view .LVU284
 839 004c FFF7FEFF 		bl	xtime
 840              	.LVL58:
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 841              		.loc 1 352 62 is_stmt 1 discriminator 1 view .LVU285
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 842              		.loc 1 352 77 is_stmt 0 discriminator 1 view .LVU286
 843 0050 4640     		eors	r6, r0
 844 0052 7E40     		eors	r6, r7
 845 0054 6670     		strb	r6, [r4, #1]
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 846              		.loc 1 353 5 is_stmt 1 view .LVU287
 847              	.LVL59:
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 848              		.loc 1 353 45 view .LVU288
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 849              		.loc 1 353 50 is_stmt 0 view .LVU289
 850 0056 0498     		ldr	r0, [sp, #16]
 851 0058 FFF7FEFF 		bl	xtime
 852              	.LVL60:
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 853              		.loc 1 353 62 is_stmt 1 discriminator 1 view .LVU290
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 854              		.loc 1 353 77 is_stmt 0 discriminator 1 view .LVU291
 855 005c 029B     		ldr	r3, [sp, #8]
 856 005e 5840     		eors	r0, r3
 857              	.LVL61:
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 858              		.loc 1 353 77 discriminator 1 view .LVU292
 859 0060 7840     		eors	r0, r7
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 860              		.loc 1 354 9 view .LVU293
 861 0062 039B     		ldr	r3, [sp, #12]
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 862              		.loc 1 353 77 discriminator 1 view .LVU294
 863 0064 A070     		strb	r0, [r4, #2]
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 864              		.loc 1 354 5 is_stmt 1 view .LVU295
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 865              		.loc 1 354 9 is_stmt 0 view .LVU296
 866 0066 0198     		ldr	r0, [sp, #4]
 867 0068 5840     		eors	r0, r3
 868              	.LVL62:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 869              		.loc 1 354 39 is_stmt 1 view .LVU297
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 870              		.loc 1 354 44 is_stmt 0 view .LVU298
 871 006a FFF7FEFF 		bl	xtime
 872              	.LVL63:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 873              		.loc 1 354 56 is_stmt 1 discriminator 1 view .LVU299
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 874              		.loc 1 354 71 is_stmt 0 discriminator 1 view .LVU300
 875 006e 039B     		ldr	r3, [sp, #12]
 876 0070 5840     		eors	r0, r3
 877              	.LVL64:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 878              		.loc 1 354 71 discriminator 1 view .LVU301
 879 0072 4740     		eors	r7, r0
 880              	.LVL65:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 881              		.loc 1 337 16 discriminator 1 view .LVU302
 882 0074 059B     		ldr	r3, [sp, #20]
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 883              		.loc 1 354 71 discriminator 1 view .LVU303
 884 0076 E770     		strb	r7, [r4, #3]
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 885              		.loc 1 337 21 is_stmt 1 discriminator 3 view .LVU304
 886              	.LVL66:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 887              		.loc 1 337 16 discriminator 1 view .LVU305
 888 0078 0434     		adds	r4, r4, #4
 889              	.LVL67:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 890              		.loc 1 337 16 is_stmt 0 discriminator 1 view .LVU306
 891 007a A342     		cmp	r3, r4
 892 007c CFD1     		bne	.L39
 893              	.LVL68:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 894              		.loc 1 337 16 discriminator 1 view .LVU307
 895              	.LBE39:
 896              	.LBE38:
 459:.././crypto/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 897              		.loc 1 459 5 is_stmt 1 view .LVU308
 898 007e 2800     		movs	r0, r5
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 899              		.loc 1 454 30 is_stmt 0 discriminator 3 view .LVU309
 900 0080 0135     		adds	r5, r5, #1
 901              	.LVL69:
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 902              		.loc 1 454 30 discriminator 3 view .LVU310
 903 0082 EDB2     		uxtb	r5, r5
 904              		.loc 1 459 5 view .LVU311
 905 0084 FFF7FEFF 		bl	AddRoundKey
 906              	.LVL70:
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 907              		.loc 1 454 30 is_stmt 1 discriminator 3 view .LVU312
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 908              		.loc 1 454 24 discriminator 1 view .LVU313
 909 0088 0A2D     		cmp	r5, #10
 910 008a BFD1     		bne	.L40
 460:.././crypto/tiny-AES128-C/aes.c ****   }
 461:.././crypto/tiny-AES128-C/aes.c ****   
 462:.././crypto/tiny-AES128-C/aes.c ****   // The last round is given below.
 463:.././crypto/tiny-AES128-C/aes.c ****   // The MixColumns function is not here in the last round.
 464:.././crypto/tiny-AES128-C/aes.c ****   SubBytes();
 911              		.loc 1 464 3 view .LVU314
 912 008c FFF7FEFF 		bl	SubBytes
 913              	.LVL71:
 465:.././crypto/tiny-AES128-C/aes.c ****   ShiftRows();
 914              		.loc 1 465 3 view .LVU315
 915 0090 FFF7FEFF 		bl	ShiftRows
 916              	.LVL72:
 466:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 917              		.loc 1 466 3 view .LVU316
 918 0094 2800     		movs	r0, r5
 919 0096 FFF7FEFF 		bl	AddRoundKey
 920              	.LVL73:
 467:.././crypto/tiny-AES128-C/aes.c **** }
 921              		.loc 1 467 1 is_stmt 0 view .LVU317
 922 009a 07B0     		add	sp, sp, #28
 923              		@ sp needed
 924              	.LVL74:
 925              		.loc 1 467 1 view .LVU318
 926 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 927              	.L44:
 928 009e C046     		.align	2
 929              	.L43:
 930 00a0 00000000 		.word	.LANCHOR0
 931              		.cfi_endproc
 932              	.LFE11:
 934              		.section	.text.BlockCopy,"ax",%progbits
 935              		.align	1
 936              		.syntax unified
 937              		.code	16
 938              		.thumb_func
 940              	BlockCopy:
 941              	.LVL75:
 942              	.LFB13:
 468:.././crypto/tiny-AES128-C/aes.c **** 
 469:.././crypto/tiny-AES128-C/aes.c **** static void InvCipher(void)
 470:.././crypto/tiny-AES128-C/aes.c **** {
 471:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round=0;
 472:.././crypto/tiny-AES128-C/aes.c **** 
 473:.././crypto/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 474:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(Nr); 
 475:.././crypto/tiny-AES128-C/aes.c **** 
 476:.././crypto/tiny-AES128-C/aes.c ****   // There will be Nr rounds.
 477:.././crypto/tiny-AES128-C/aes.c ****   // The first Nr-1 rounds are identical.
 478:.././crypto/tiny-AES128-C/aes.c ****   // These Nr-1 rounds are executed in the loop below.
 479:.././crypto/tiny-AES128-C/aes.c ****   for(round=Nr-1;round>0;round--)
 480:.././crypto/tiny-AES128-C/aes.c ****   {
 481:.././crypto/tiny-AES128-C/aes.c ****     InvShiftRows();
 482:.././crypto/tiny-AES128-C/aes.c ****     InvSubBytes();
 483:.././crypto/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 484:.././crypto/tiny-AES128-C/aes.c ****     InvMixColumns();
 485:.././crypto/tiny-AES128-C/aes.c ****   }
 486:.././crypto/tiny-AES128-C/aes.c ****   
 487:.././crypto/tiny-AES128-C/aes.c ****   // The last round is given below.
 488:.././crypto/tiny-AES128-C/aes.c ****   // The MixColumns function is not here in the last round.
 489:.././crypto/tiny-AES128-C/aes.c ****   InvShiftRows();
 490:.././crypto/tiny-AES128-C/aes.c ****   InvSubBytes();
 491:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 492:.././crypto/tiny-AES128-C/aes.c **** }
 493:.././crypto/tiny-AES128-C/aes.c **** 
 494:.././crypto/tiny-AES128-C/aes.c **** static void BlockCopy(uint8_t* output, const uint8_t* input)
 495:.././crypto/tiny-AES128-C/aes.c **** {
 943              		.loc 1 495 1 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 496:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i;
 948              		.loc 1 496 3 view .LVU320
 497:.././crypto/tiny-AES128-C/aes.c ****   for (i=0;i<KEYLEN;++i)
 949              		.loc 1 497 3 view .LVU321
 950              		.loc 1 497 13 discriminator 1 view .LVU322
 495:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i;
 951              		.loc 1 495 1 is_stmt 0 view .LVU323
 952 0000 0023     		movs	r3, #0
 953              	.LVL76:
 954              	.L46:
 498:.././crypto/tiny-AES128-C/aes.c ****   {
 499:.././crypto/tiny-AES128-C/aes.c ****     output[i] = input[i];
 955              		.loc 1 499 5 is_stmt 1 view .LVU324
 956              		.loc 1 499 22 is_stmt 0 view .LVU325
 957 0002 CA5C     		ldrb	r2, [r1, r3]
 958              		.loc 1 499 15 view .LVU326
 959 0004 C254     		strb	r2, [r0, r3]
 497:.././crypto/tiny-AES128-C/aes.c ****   {
 960              		.loc 1 497 21 is_stmt 1 discriminator 3 view .LVU327
 961              	.LVL77:
 497:.././crypto/tiny-AES128-C/aes.c ****   {
 962              		.loc 1 497 13 discriminator 1 view .LVU328
 963 0006 0133     		adds	r3, r3, #1
 964              	.LVL78:
 497:.././crypto/tiny-AES128-C/aes.c ****   {
 965              		.loc 1 497 13 is_stmt 0 discriminator 1 view .LVU329
 966 0008 102B     		cmp	r3, #16
 967 000a FAD1     		bne	.L46
 500:.././crypto/tiny-AES128-C/aes.c ****   }
 501:.././crypto/tiny-AES128-C/aes.c **** }
 968              		.loc 1 501 1 view .LVU330
 969              		@ sp needed
 970 000c 7047     		bx	lr
 971              		.cfi_endproc
 972              	.LFE13:
 974              		.section	.text.AES128_ECB_indp_setkey,"ax",%progbits
 975              		.align	1
 976              		.global	AES128_ECB_indp_setkey
 977              		.syntax unified
 978              		.code	16
 979              		.thumb_func
 981              	AES128_ECB_indp_setkey:
 982              	.LVL79:
 983              	.LFB14:
 502:.././crypto/tiny-AES128-C/aes.c **** 
 503:.././crypto/tiny-AES128-C/aes.c **** 
 504:.././crypto/tiny-AES128-C/aes.c **** 
 505:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 506:.././crypto/tiny-AES128-C/aes.c **** /* Public functions:                                                         */
 507:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 508:.././crypto/tiny-AES128-C/aes.c **** 
 509:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_indp_setkey(uint8_t* key)
 510:.././crypto/tiny-AES128-C/aes.c **** {
 984              		.loc 1 510 1 is_stmt 1 view -0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 511:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 988              		.loc 1 511 3 view .LVU332
 510:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 989              		.loc 1 510 1 is_stmt 0 view .LVU333
 990 0000 10B5     		push	{r4, lr}
 991              	.LCFI6:
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 4, -8
 994              		.cfi_offset 14, -4
 995              		.loc 1 511 7 view .LVU334
 996 0002 024B     		ldr	r3, .L49
 512:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 513:.././crypto/tiny-AES128-C/aes.c **** }
 997              		.loc 1 513 1 view .LVU335
 998              		@ sp needed
 511:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 999              		.loc 1 511 7 view .LVU336
 1000 0004 1860     		str	r0, [r3]
 512:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 1001              		.loc 1 512 3 is_stmt 1 view .LVU337
 1002 0006 FFF7FEFF 		bl	KeyExpansion
 1003              	.LVL80:
 1004              		.loc 1 513 1 is_stmt 0 view .LVU338
 1005 000a 10BD     		pop	{r4, pc}
 1006              	.L50:
 1007              		.align	2
 1008              	.L49:
 1009 000c 00000000 		.word	.LANCHOR0
 1010              		.cfi_endproc
 1011              	.LFE14:
 1013              		.section	.text.AES128_ECB_indp_crypto,"ax",%progbits
 1014              		.align	1
 1015              		.global	AES128_ECB_indp_crypto
 1016              		.syntax unified
 1017              		.code	16
 1018              		.thumb_func
 1020              	AES128_ECB_indp_crypto:
 1021              	.LVL81:
 1022              	.LFB15:
 514:.././crypto/tiny-AES128-C/aes.c **** 
 515:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_indp_crypto(uint8_t* input)
 516:.././crypto/tiny-AES128-C/aes.c **** {
 1023              		.loc 1 516 1 is_stmt 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 517:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)input;
 1027              		.loc 1 517 3 view .LVU340
 516:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)input;
 1028              		.loc 1 516 1 is_stmt 0 view .LVU341
 1029 0000 0100     		movs	r1, r0
 1030 0002 10B5     		push	{r4, lr}
 1031              	.LCFI7:
 1032              		.cfi_def_cfa_offset 8
 1033              		.cfi_offset 4, -8
 1034              		.cfi_offset 14, -4
 1035              		.loc 1 517 9 view .LVU342
 1036 0004 0348     		ldr	r0, .L52
 1037              	.LVL82:
 518:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 519:.././crypto/tiny-AES128-C/aes.c ****   Cipher();
 520:.././crypto/tiny-AES128-C/aes.c **** }
 1038              		.loc 1 520 1 view .LVU343
 1039              		@ sp needed
 517:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 1040              		.loc 1 517 9 view .LVU344
 1041 0006 4160     		str	r1, [r0, #4]
 518:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 1042              		.loc 1 518 3 is_stmt 1 view .LVU345
 1043 0008 0830     		adds	r0, r0, #8
 1044 000a FFF7FEFF 		bl	BlockCopy
 1045              	.LVL83:
 519:.././crypto/tiny-AES128-C/aes.c **** }
 1046              		.loc 1 519 3 view .LVU346
 1047 000e FFF7FEFF 		bl	Cipher
 1048              	.LVL84:
 1049              		.loc 1 520 1 is_stmt 0 view .LVU347
 1050 0012 10BD     		pop	{r4, pc}
 1051              	.L53:
 1052              		.align	2
 1053              	.L52:
 1054 0014 00000000 		.word	.LANCHOR0
 1055              		.cfi_endproc
 1056              	.LFE15:
 1058              		.section	.text.AES128_ECB_encrypt,"ax",%progbits
 1059              		.align	1
 1060              		.global	AES128_ECB_encrypt
 1061              		.syntax unified
 1062              		.code	16
 1063              		.thumb_func
 1065              	AES128_ECB_encrypt:
 1066              	.LVL85:
 1067              	.LFB16:
 521:.././crypto/tiny-AES128-C/aes.c **** 
 522:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_encrypt(uint8_t* input, uint8_t* key, uint8_t* output)
 523:.././crypto/tiny-AES128-C/aes.c **** {
 1068              		.loc 1 523 1 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 524:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 525:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(output, input);
 1072              		.loc 1 525 3 view .LVU349
 523:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1073              		.loc 1 523 1 is_stmt 0 view .LVU350
 1074 0000 70B5     		push	{r4, r5, r6, lr}
 1075              	.LCFI8:
 1076              		.cfi_def_cfa_offset 16
 1077              		.cfi_offset 4, -16
 1078              		.cfi_offset 5, -12
 1079              		.cfi_offset 6, -8
 1080              		.cfi_offset 14, -4
 523:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1081              		.loc 1 523 1 view .LVU351
 1082 0002 1400     		movs	r4, r2
 526:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 527:.././crypto/tiny-AES128-C/aes.c **** 
 528:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 529:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 530:.././crypto/tiny-AES128-C/aes.c **** 
 531:.././crypto/tiny-AES128-C/aes.c ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 532:.././crypto/tiny-AES128-C/aes.c ****   Cipher();
 533:.././crypto/tiny-AES128-C/aes.c **** }
 1083              		.loc 1 533 1 view .LVU352
 1084              		@ sp needed
 523:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1085              		.loc 1 523 1 view .LVU353
 1086 0004 0D00     		movs	r5, r1
 525:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1087              		.loc 1 525 3 view .LVU354
 1088 0006 0100     		movs	r1, r0
 1089              	.LVL86:
 525:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1090              		.loc 1 525 3 view .LVU355
 1091 0008 1000     		movs	r0, r2
 1092              	.LVL87:
 525:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1093              		.loc 1 525 3 view .LVU356
 1094 000a FFF7FEFF 		bl	BlockCopy
 1095              	.LVL88:
 526:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1096              		.loc 1 526 3 is_stmt 1 view .LVU357
 526:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1097              		.loc 1 526 9 is_stmt 0 view .LVU358
 1098 000e 044B     		ldr	r3, .L55
 528:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 1099              		.loc 1 528 7 view .LVU359
 1100 0010 1D60     		str	r5, [r3]
 526:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1101              		.loc 1 526 9 view .LVU360
 1102 0012 5C60     		str	r4, [r3, #4]
 528:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 1103              		.loc 1 528 3 is_stmt 1 view .LVU361
 529:.././crypto/tiny-AES128-C/aes.c **** 
 1104              		.loc 1 529 3 view .LVU362
 1105 0014 FFF7FEFF 		bl	KeyExpansion
 1106              	.LVL89:
 532:.././crypto/tiny-AES128-C/aes.c **** }
 1107              		.loc 1 532 3 view .LVU363
 1108 0018 FFF7FEFF 		bl	Cipher
 1109              	.LVL90:
 1110              	.LVL91:
 1111              	.LVL92:
 1112              		.loc 1 533 1 is_stmt 0 view .LVU364
 1113 001c 70BD     		pop	{r4, r5, r6, pc}
 1114              	.L56:
 1115 001e C046     		.align	2
 1116              	.L55:
 1117 0020 00000000 		.word	.LANCHOR0
 1118              		.cfi_endproc
 1119              	.LFE16:
 1121              		.section	.text.AES128_ECB_decrypt,"ax",%progbits
 1122              		.align	1
 1123              		.global	AES128_ECB_decrypt
 1124              		.syntax unified
 1125              		.code	16
 1126              		.thumb_func
 1128              	AES128_ECB_decrypt:
 1129              	.LVL93:
 1130              	.LFB17:
 534:.././crypto/tiny-AES128-C/aes.c **** 
 535:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_decrypt(uint8_t* input, uint8_t* key, uint8_t *output)
 536:.././crypto/tiny-AES128-C/aes.c **** {
 1131              		.loc 1 536 1 is_stmt 1 view -0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 64
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 537:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 538:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(output, input);
 1135              		.loc 1 538 3 view .LVU366
 536:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1136              		.loc 1 536 1 is_stmt 0 view .LVU367
 1137 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1138              	.LCFI9:
 1139              		.cfi_def_cfa_offset 20
 1140              		.cfi_offset 4, -20
 1141              		.cfi_offset 5, -16
 1142              		.cfi_offset 6, -12
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 0C00     		movs	r4, r1
 1146 0004 91B0     		sub	sp, sp, #68
 1147              	.LCFI10:
 1148              		.cfi_def_cfa_offset 88
 1149              		.loc 1 538 3 view .LVU368
 1150 0006 0100     		movs	r1, r0
 1151              	.LVL94:
 1152              		.loc 1 538 3 view .LVU369
 1153 0008 1000     		movs	r0, r2
 1154              	.LVL95:
 536:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1155              		.loc 1 536 1 view .LVU370
 1156 000a 0692     		str	r2, [sp, #24]
 1157              		.loc 1 538 3 view .LVU371
 1158 000c FFF7FEFF 		bl	BlockCopy
 1159              	.LVL96:
 539:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1160              		.loc 1 539 3 is_stmt 1 view .LVU372
 1161              		.loc 1 539 9 is_stmt 0 view .LVU373
 1162 0010 514B     		ldr	r3, .L62
 1163 0012 069A     		ldr	r2, [sp, #24]
 540:.././crypto/tiny-AES128-C/aes.c **** 
 541:.././crypto/tiny-AES128-C/aes.c ****   // The KeyExpansion routine must be called before encryption.
 542:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 1164              		.loc 1 542 7 view .LVU374
 1165 0014 1C60     		str	r4, [r3]
 539:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1166              		.loc 1 539 9 view .LVU375
 1167 0016 5A60     		str	r2, [r3, #4]
 1168              		.loc 1 542 3 is_stmt 1 view .LVU376
 543:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 1169              		.loc 1 543 3 view .LVU377
 1170 0018 FFF7FEFF 		bl	KeyExpansion
 1171              	.LVL97:
 544:.././crypto/tiny-AES128-C/aes.c **** 
 545:.././crypto/tiny-AES128-C/aes.c ****   InvCipher();
 1172              		.loc 1 545 3 view .LVU378
 1173              	.LBB44:
 1174              	.LBI44:
 469:.././crypto/tiny-AES128-C/aes.c **** {
 1175              		.loc 1 469 13 view .LVU379
 1176              	.LBB45:
 471:.././crypto/tiny-AES128-C/aes.c **** 
 1177              		.loc 1 471 3 view .LVU380
 474:.././crypto/tiny-AES128-C/aes.c **** 
 1178              		.loc 1 474 3 view .LVU381
 1179 001c 0A20     		movs	r0, #10
 1180 001e FFF7FEFF 		bl	AddRoundKey
 1181              	.LVL98:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1182              		.loc 1 479 3 view .LVU382
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1183              		.loc 1 479 23 discriminator 1 view .LVU383
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1184              		.loc 1 479 12 is_stmt 0 view .LVU384
 1185 0022 0923     		movs	r3, #9
 1186 0024 0193     		str	r3, [sp, #4]
 1187              	.LVL99:
 1188              	.L59:
 481:.././crypto/tiny-AES128-C/aes.c ****     InvSubBytes();
 1189              		.loc 1 481 5 is_stmt 1 view .LVU385
 1190 0026 FFF7FEFF 		bl	InvShiftRows
 1191              	.LVL100:
 482:.././crypto/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 1192              		.loc 1 482 5 view .LVU386
 1193 002a FFF7FEFF 		bl	InvSubBytes
 1194              	.LVL101:
 483:.././crypto/tiny-AES128-C/aes.c ****     InvMixColumns();
 1195              		.loc 1 483 5 view .LVU387
 1196 002e 0198     		ldr	r0, [sp, #4]
 1197 0030 FFF7FEFF 		bl	AddRoundKey
 1198              	.LVL102:
 484:.././crypto/tiny-AES128-C/aes.c ****   }
 1199              		.loc 1 484 5 view .LVU388
 1200              	.LBB46:
 1201              	.LBI46:
 381:.././crypto/tiny-AES128-C/aes.c **** {
 1202              		.loc 1 381 13 view .LVU389
 1203              	.LBB47:
 383:.././crypto/tiny-AES128-C/aes.c ****   uint8_t a,b,c,d;
 1204              		.loc 1 383 3 view .LVU390
 384:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 1205              		.loc 1 384 3 view .LVU391
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1206              		.loc 1 385 3 view .LVU392
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1207              		.loc 1 385 12 discriminator 1 view .LVU393
 1208 0034 069D     		ldr	r5, [sp, #24]
 1209 0036 2B00     		movs	r3, r5
 1210 0038 1033     		adds	r3, r3, #16
 1211 003a 0F93     		str	r3, [sp, #60]
 1212              	.LVL103:
 1213              	.L58:
 387:.././crypto/tiny-AES128-C/aes.c ****     b = (*state)[i][1];
 1214              		.loc 1 387 5 view .LVU394
 387:.././crypto/tiny-AES128-C/aes.c ****     b = (*state)[i][1];
 1215              		.loc 1 387 7 is_stmt 0 view .LVU395
 1216 003c 2B78     		ldrb	r3, [r5]
 1217 003e 0293     		str	r3, [sp, #8]
 1218              	.LVL104:
 388:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 1219              		.loc 1 388 5 is_stmt 1 view .LVU396
 388:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 1220              		.loc 1 388 7 is_stmt 0 view .LVU397
 1221 0040 6B78     		ldrb	r3, [r5, #1]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1222              		.loc 1 392 22 view .LVU398
 1223 0042 0298     		ldr	r0, [sp, #8]
 388:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 1224              		.loc 1 388 7 view .LVU399
 1225 0044 0393     		str	r3, [sp, #12]
 1226              	.LVL105:
 389:.././crypto/tiny-AES128-C/aes.c ****     d = (*state)[i][3];
 1227              		.loc 1 389 5 is_stmt 1 view .LVU400
 389:.././crypto/tiny-AES128-C/aes.c ****     d = (*state)[i][3];
 1228              		.loc 1 389 7 is_stmt 0 view .LVU401
 1229 0046 AB78     		ldrb	r3, [r5, #2]
 1230 0048 0493     		str	r3, [sp, #16]
 1231              	.LVL106:
 390:.././crypto/tiny-AES128-C/aes.c **** 
 1232              		.loc 1 390 5 is_stmt 1 view .LVU402
 390:.././crypto/tiny-AES128-C/aes.c **** 
 1233              		.loc 1 390 7 is_stmt 0 view .LVU403
 1234 004a EB78     		ldrb	r3, [r5, #3]
 1235 004c 0593     		str	r3, [sp, #20]
 1236              	.LVL107:
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1237              		.loc 1 392 5 is_stmt 1 view .LVU404
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1238              		.loc 1 392 22 is_stmt 0 view .LVU405
 1239 004e FFF7FEFF 		bl	xtime
 1240              	.LVL108:
 1241 0052 0890     		str	r0, [sp, #32]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1242              		.loc 1 392 22 discriminator 1 view .LVU406
 1243 0054 FFF7FEFF 		bl	xtime
 1244              	.LVL109:
 1245 0058 0990     		str	r0, [sp, #36]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1246              		.loc 1 392 22 discriminator 2 view .LVU407
 1247 005a FFF7FEFF 		bl	xtime
 1248              	.LVL110:
 1249 005e 0790     		str	r0, [sp, #28]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1250              		.loc 1 392 42 discriminator 4 view .LVU408
 1251 0060 0398     		ldr	r0, [sp, #12]
 1252 0062 FFF7FEFF 		bl	xtime
 1253              	.LVL111:
 1254 0066 0A90     		str	r0, [sp, #40]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1255              		.loc 1 392 42 discriminator 7 view .LVU409
 1256 0068 FFF7FEFF 		bl	xtime
 1257              	.LVL112:
 1258 006c 0B90     		str	r0, [sp, #44]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1259              		.loc 1 392 42 discriminator 8 view .LVU410
 1260 006e FFF7FEFF 		bl	xtime
 1261              	.LVL113:
 1262 0072 0700     		movs	r7, r0
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1263              		.loc 1 392 62 discriminator 11 view .LVU411
 1264 0074 0498     		ldr	r0, [sp, #16]
 1265 0076 FFF7FEFF 		bl	xtime
 1266              	.LVL114:
 1267 007a 0C90     		str	r0, [sp, #48]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1268              		.loc 1 392 62 discriminator 12 view .LVU412
 1269 007c FFF7FEFF 		bl	xtime
 1270              	.LVL115:
 1271 0080 0400     		movs	r4, r0
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1272              		.loc 1 392 62 discriminator 13 view .LVU413
 1273 0082 FFF7FEFF 		bl	xtime
 1274              	.LVL116:
 1275 0086 0600     		movs	r6, r0
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1276              		.loc 1 392 82 discriminator 16 view .LVU414
 1277 0088 0598     		ldr	r0, [sp, #20]
 1278 008a FFF7FEFF 		bl	xtime
 1279              	.LVL117:
 1280 008e 0D90     		str	r0, [sp, #52]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1281              		.loc 1 392 82 discriminator 19 view .LVU415
 1282 0090 FFF7FEFF 		bl	xtime
 1283              	.LVL118:
 1284 0094 0E90     		str	r0, [sp, #56]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1285              		.loc 1 392 82 discriminator 20 view .LVU416
 1286 0096 FFF7FEFF 		bl	xtime
 1287              	.LVL119:
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1288              		.loc 1 392 80 discriminator 40 view .LVU417
 1289 009a 099A     		ldr	r2, [sp, #36]
 1290 009c 089B     		ldr	r3, [sp, #32]
 1291 009e 5340     		eors	r3, r2
 1292 00a0 079A     		ldr	r2, [sp, #28]
 1293 00a2 5340     		eors	r3, r2
 1294 00a4 0A9A     		ldr	r2, [sp, #40]
 1295 00a6 5340     		eors	r3, r2
 1296 00a8 7B40     		eors	r3, r7
 1297 00aa 6340     		eors	r3, r4
 1298 00ac 039A     		ldr	r2, [sp, #12]
 1299 00ae 7340     		eors	r3, r6
 1300 00b0 4340     		eors	r3, r0
 1301 00b2 5340     		eors	r3, r2
 1302 00b4 049A     		ldr	r2, [sp, #16]
 1303 00b6 5340     		eors	r3, r2
 1304 00b8 059A     		ldr	r2, [sp, #20]
 1305 00ba 5340     		eors	r3, r2
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1306              		.loc 1 392 20 discriminator 40 view .LVU418
 1307 00bc 2B70     		strb	r3, [r5]
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1308              		.loc 1 393 5 is_stmt 1 view .LVU419
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1309              		.loc 1 393 80 is_stmt 0 discriminator 40 view .LVU420
 1310 00be 079A     		ldr	r2, [sp, #28]
 1311 00c0 0A9B     		ldr	r3, [sp, #40]
 1312 00c2 5340     		eors	r3, r2
 1313 00c4 0B9A     		ldr	r2, [sp, #44]
 1314 00c6 5340     		eors	r3, r2
 1315 00c8 0C9A     		ldr	r2, [sp, #48]
 1316 00ca 7B40     		eors	r3, r7
 1317 00cc 5340     		eors	r3, r2
 1318 00ce 0E9A     		ldr	r2, [sp, #56]
 1319 00d0 7340     		eors	r3, r6
 1320 00d2 5340     		eors	r3, r2
 1321 00d4 029A     		ldr	r2, [sp, #8]
 1322 00d6 4340     		eors	r3, r0
 1323 00d8 5340     		eors	r3, r2
 1324 00da 049A     		ldr	r2, [sp, #16]
 1325 00dc 5340     		eors	r3, r2
 1326 00de 059A     		ldr	r2, [sp, #20]
 1327 00e0 5340     		eors	r3, r2
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1328              		.loc 1 393 20 discriminator 40 view .LVU421
 1329 00e2 6B70     		strb	r3, [r5, #1]
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1330              		.loc 1 394 5 is_stmt 1 view .LVU422
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1331              		.loc 1 394 80 is_stmt 0 discriminator 40 view .LVU423
 1332 00e4 079A     		ldr	r2, [sp, #28]
 1333 00e6 099B     		ldr	r3, [sp, #36]
 1334 00e8 5340     		eors	r3, r2
 1335 00ea 0C9A     		ldr	r2, [sp, #48]
 1336 00ec 7B40     		eors	r3, r7
 1337 00ee 5340     		eors	r3, r2
 1338 00f0 5C40     		eors	r4, r3
 1339 00f2 0D9B     		ldr	r3, [sp, #52]
 1340 00f4 7440     		eors	r4, r6
 1341 00f6 5C40     		eors	r4, r3
 1342 00f8 029B     		ldr	r3, [sp, #8]
 1343 00fa 4440     		eors	r4, r0
 1344 00fc 5C40     		eors	r4, r3
 1345 00fe 039B     		ldr	r3, [sp, #12]
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1346              		.loc 1 395 80 discriminator 40 view .LVU424
 1347 0100 079A     		ldr	r2, [sp, #28]
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1348              		.loc 1 394 80 discriminator 40 view .LVU425
 1349 0102 5C40     		eors	r4, r3
 1350 0104 059B     		ldr	r3, [sp, #20]
 1351 0106 5C40     		eors	r4, r3
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1352              		.loc 1 395 80 discriminator 40 view .LVU426
 1353 0108 089B     		ldr	r3, [sp, #32]
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1354              		.loc 1 394 20 discriminator 40 view .LVU427
 1355 010a AC70     		strb	r4, [r5, #2]
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1356              		.loc 1 395 5 is_stmt 1 view .LVU428
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1357              		.loc 1 395 80 is_stmt 0 discriminator 40 view .LVU429
 1358 010c 5340     		eors	r3, r2
 1359 010e 0B9A     		ldr	r2, [sp, #44]
 1360 0110 5340     		eors	r3, r2
 1361 0112 7B40     		eors	r3, r7
 1362 0114 5E40     		eors	r6, r3
 1363 0116 0D9B     		ldr	r3, [sp, #52]
 1364 0118 0E9F     		ldr	r7, [sp, #56]
 1365 011a 5E40     		eors	r6, r3
 1366 011c 7740     		eors	r7, r6
 1367 011e 029B     		ldr	r3, [sp, #8]
 1368 0120 7840     		eors	r0, r7
 1369 0122 5840     		eors	r0, r3
 1370 0124 039B     		ldr	r3, [sp, #12]
 1371 0126 5840     		eors	r0, r3
 1372 0128 049B     		ldr	r3, [sp, #16]
 1373 012a 5840     		eors	r0, r3
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1374              		.loc 1 385 12 discriminator 1 view .LVU430
 1375 012c 0F9B     		ldr	r3, [sp, #60]
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1376              		.loc 1 395 20 discriminator 40 view .LVU431
 1377 012e E870     		strb	r0, [r5, #3]
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1378              		.loc 1 385 15 is_stmt 1 discriminator 3 view .LVU432
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1379              		.loc 1 385 12 discriminator 1 view .LVU433
 1380 0130 0435     		adds	r5, r5, #4
 1381 0132 AB42     		cmp	r3, r5
 1382 0134 82D1     		bne	.L58
 1383              	.LVL120:
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1384              		.loc 1 385 12 is_stmt 0 discriminator 1 view .LVU434
 1385              	.LBE47:
 1386              	.LBE46:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1387              		.loc 1 479 31 is_stmt 1 discriminator 3 view .LVU435
 1388 0136 019B     		ldr	r3, [sp, #4]
 1389 0138 013B     		subs	r3, r3, #1
 1390 013a DBB2     		uxtb	r3, r3
 1391 013c 0193     		str	r3, [sp, #4]
 1392              	.LVL121:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1393              		.loc 1 479 23 discriminator 1 view .LVU436
 1394 013e 002B     		cmp	r3, #0
 1395 0140 00D0     		beq	.LCB1121
 1396 0142 70E7     		b	.L59	@long jump
 1397              	.LCB1121:
 489:.././crypto/tiny-AES128-C/aes.c ****   InvSubBytes();
 1398              		.loc 1 489 3 view .LVU437
 1399 0144 FFF7FEFF 		bl	InvShiftRows
 1400              	.LVL122:
 490:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 1401              		.loc 1 490 3 view .LVU438
 1402 0148 FFF7FEFF 		bl	InvSubBytes
 1403              	.LVL123:
 491:.././crypto/tiny-AES128-C/aes.c **** }
 1404              		.loc 1 491 3 view .LVU439
 1405 014c 0198     		ldr	r0, [sp, #4]
 1406 014e FFF7FEFF 		bl	AddRoundKey
 1407              	.LVL124:
 491:.././crypto/tiny-AES128-C/aes.c **** }
 1408              		.loc 1 491 3 is_stmt 0 view .LVU440
 1409              	.LBE45:
 1410              	.LBE44:
 546:.././crypto/tiny-AES128-C/aes.c **** }
 1411              		.loc 1 546 1 view .LVU441
 1412 0152 11B0     		add	sp, sp, #68
 1413              		@ sp needed
 1414 0154 F0BD     		pop	{r4, r5, r6, r7, pc}
 1415              	.L63:
 1416 0156 C046     		.align	2
 1417              	.L62:
 1418 0158 00000000 		.word	.LANCHOR0
 1419              		.cfi_endproc
 1420              	.LFE17:
 1422              		.global	Rcon
 1423              		.global	rsbox
 1424              		.global	sbox
 1425              		.data
 1426              		.set	.LANCHOR1,. + 0
 1429              	Rcon:
 1430 0000 8D010204 		.ascii	"\215\001\002\004\010\020 @\200\0336"
 1430      08102040 
 1430      801B36
 1433              	rsbox:
 1434 000b 52096AD5 		.ascii	"R\011j\32506\2458\277@\243\236\201\363\327\373|\343"
 1434      3036A538 
 1434      BF40A39E 
 1434      81F3D7FB 
 1434      7CE3
 1435 001d 39829B2F 		.ascii	"9\202\233/\377\2074\216CD\304\336\351\313T{\2242\246"
 1435      FF87348E 
 1435      4344C4DE 
 1435      E9CB547B 
 1435      9432A6
 1436 0030 C2233DEE 		.ascii	"\302#=\356L\225\013B\372\303N\010.\241f(\331$\262v["
 1436      4C950B42 
 1436      FAC34E08 
 1436      2EA16628 
 1436      D924B276 
 1437 0045 A2496D8B 		.ascii	"\242Im\213\321%r\370\366d\206h\230\026\324\244\\\314"
 1437      D12572F8 
 1437      F6648668 
 1437      9816D4A4 
 1437      5CCC
 1438 0057 5D65B692 		.ascii	"]e\266\222lpHP\375\355\271\332^\025FW\247\215\235\204"
 1438      6C704850 
 1438      FDEDB9DA 
 1438      5E154657 
 1438      A78D9D84 
 1439 006b 90D8AB00 		.ascii	"\220\330\253\000\214\274\323\012\367\344X\005\270\263"
 1439      8CBCD30A 
 1439      F7E45805 
 1439      B8B3
 1440 0079 4506D02C 		.ascii	"E\006\320,\036\217\312?\017\002\301\257\275\003\001"
 1440      1E8FCA3F 
 1440      0F02C1AF 
 1440      BD0301
 1441 0088 138A6B3A 		.ascii	"\023\212k:\221\021AOg\334\352\227\362\317\316\360\264"
 1441      9111414F 
 1441      67DCEA97 
 1441      F2CFCEF0 
 1441      B4
 1442 0099 E67396AC 		.ascii	"\346s\226\254t\"\347\2555\205\342\3717\350\034u\337"
 1442      7422E7AD 
 1442      3585E2F9 
 1442      37E81C75 
 1442      DF
 1443 00aa 6E47F11A 		.ascii	"nG\361\032q\035)\305\211o\267b\016\252\030\276\033\374"
 1443      711D29C5 
 1443      896FB762 
 1443      0EAA18BE 
 1443      1BFC
 1444 00bc 563E4BC6 		.ascii	"V>K\306\322y \232\333\300\376x\315Z\364\037\335\250"
 1444      D279209A 
 1444      DBC0FE78 
 1444      CD5AF41F 
 1444      DDA8
 1445 00ce 338807C7 		.ascii	"3\210\007\3071\261\022\020Y'\200\354_`Q\177\251\031"
 1445      31B11210 
 1445      592780EC 
 1445      5F60517F 
 1445      A919
 1446 00e0 B54A0D2D 		.ascii	"\265J\015-\345z\237\223\311\234\357\240\340;M\256*\365"
 1446      E57A9F93 
 1446      C99CEFA0 
 1446      E03B4DAE 
 1446      2AF5
 1447 00f2 B0C8EBBB 		.ascii	"\260\310\353\273<\203S\231a\027+\004~\272w\326&\341"
 1447      3C835399 
 1447      61172B04 
 1447      7EBA77D6 
 1447      26E1
 1448 0104 69146355 		.ascii	"i\024cU!\014}"
 1448      210C7D
 1451              	sbox:
 1452 010b 637C777B 		.ascii	"c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 1452      F26B6FC5 
 1452      3001672B 
 1452      FED7AB76 
 1452      CA82C97D 
 1453 0120 5947F0AD 		.ascii	"YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 1453      D4A2AF9C 
 1453      A472C0B7 
 1453      FD932636 
 1453      3FF7
 1454 0132 CC34A5E5 		.ascii	"\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 1454      F171D831 
 1454      1504C723 
 1454      C3189605 
 1455 0142 9A071280 		.ascii	"\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 1455      E2EB27B2 
 1455      7509832C 
 1455      1A1B6E5A 
 1455      A0
 1456 0153 523BD6B3 		.ascii	"R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 1456      29E32F84 
 1456      53D100ED 
 1456      20FCB15B 
 1456      6ACBBE
 1457 0166 394A4C58 		.ascii	"9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 1457      CFD0EFAA 
 1457      FB434D33 
 1457      8545F902 
 1457      7F503C9F 
 1458 017b 51A3408F 		.ascii	"Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 1458      929D38F5 
 1458      BCB6DA21 
 1458      10FFF3D2 
 1459 018b CD0C13EC 		.ascii	"\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 1459      5F974417 
 1459      C4A77E3D 
 1459      645D1973 
 1459      60814FDC 
 1460 019f 222A9088 		.ascii	"\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 1460      46EEB814 
 1460      DE5E0BDB 
 1460      E0323A0A 
 1460      4906
 1461 01b1 245CC2D3 		.ascii	"$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 1461      AC629195 
 1461      E479E7C8 
 1461      376D8DD5 
 1461      4EA9
 1462 01c3 6C56F4EA 		.ascii	"lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 1462      657AAE08 
 1462      BA78252E 
 1462      1CA6B4C6 
 1462      E8DD
 1463 01d5 741F4BBD 		.ascii	"t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 1463      8B8A703E 
 1463      B5664803 
 1463      F60E6135 
 1463      57B986C1 
 1464 01e9 1D9EE1F8 		.ascii	"\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 1464      981169D9 
 1464      8E949B1E 
 1464      87E9
 1465 01f7 CE5528DF 		.ascii	"\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 1465      8CA1890D 
 1465      BFE64268 
 1465      41992D0F 
 1465      B054
 1466 0209 BB16     		.ascii	"\273\026"
 1467              		.bss
 1468              		.align	2
 1469              		.set	.LANCHOR0,. + 0
 1472              	Key:
 1473 0000 00000000 		.space	4
 1476              	state:
 1477 0004 00000000 		.space	4
 1480              	input_save:
 1481 0008 00000000 		.space	16
 1481      00000000 
 1481      00000000 
 1481      00000000 
 1484              	RoundKey:
 1485 0018 00000000 		.space	176
 1485      00000000 
 1485      00000000 
 1485      00000000 
 1485      00000000 
 1486              		.text
 1487              	.Letext0:
 1488              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1489              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1490              		.file 4 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 aes.c
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:19     .text.KeyExpansion:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:24     .text.KeyExpansion:00000000 KeyExpansion
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:236    .text.KeyExpansion:00000088 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1484   .bss:00000018 RoundKey
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1451   .data:0000010b sbox
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:244    .text.AddRoundKey:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:249    .text.AddRoundKey:00000000 AddRoundKey
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:325    .text.AddRoundKey:00000034 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:331    .text.SubBytes:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:336    .text.SubBytes:00000000 SubBytes
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:411    .text.SubBytes:00000024 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:417    .text.ShiftRows:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:422    .text.ShiftRows:00000000 ShiftRows
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:507    .text.ShiftRows:00000038 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:512    .text.xtime:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:517    .text.xtime:00000000 xtime
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:549    .text.InvSubBytes:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:554    .text.InvSubBytes:00000000 InvSubBytes
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:629    .text.InvSubBytes:00000024 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1433   .data:0000000b rsbox
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:635    .text.InvShiftRows:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:640    .text.InvShiftRows:00000000 InvShiftRows
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:725    .text.InvShiftRows:00000038 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:730    .text.Cipher:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:735    .text.Cipher:00000000 Cipher
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:930    .text.Cipher:000000a0 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:935    .text.BlockCopy:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:940    .text.BlockCopy:00000000 BlockCopy
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:975    .text.AES128_ECB_indp_setkey:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:981    .text.AES128_ECB_indp_setkey:00000000 AES128_ECB_indp_setkey
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1009   .text.AES128_ECB_indp_setkey:0000000c $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1014   .text.AES128_ECB_indp_crypto:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1020   .text.AES128_ECB_indp_crypto:00000000 AES128_ECB_indp_crypto
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1054   .text.AES128_ECB_indp_crypto:00000014 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1059   .text.AES128_ECB_encrypt:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1065   .text.AES128_ECB_encrypt:00000000 AES128_ECB_encrypt
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1117   .text.AES128_ECB_encrypt:00000020 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1122   .text.AES128_ECB_decrypt:00000000 $t
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1128   .text.AES128_ECB_decrypt:00000000 AES128_ECB_decrypt
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1418   .text.AES128_ECB_decrypt:00000158 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1429   .data:00000000 Rcon
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1468   .bss:00000000 $d
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1472   .bss:00000000 Key
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1476   .bss:00000004 state
/var/folders/9f/5d0dy5x17vxf84ddjfcw5h2r0000gp/T//ccb0J6hX.s:1480   .bss:00000008 input_save

UNDEFINED SYMBOLS
memcpy
